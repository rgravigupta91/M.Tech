<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0524.1403                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0524.1403)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='query (Mag6PlusEarthquakes_1900-2013)' inline='true' name='federated.12x1cap1ixb5ji1368uan1obirdy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Mag6PlusEarthquakes_1900-2013' name='excel-direct.0m5cjii1lt3la6195eyv01apycal'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Aditya Sreevatsa K/Education/MTech/Semester 1/6. Data Visualisation Using Tableau/Presentation/Our Group Data/Mag6PlusEarthquakes_1900-2013.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0m5cjii1lt3la6195eyv01apycal' name='query' table='[query$]' type='table'>
          <columns gridOrigin='A1:R8314:no:A1:R8314:0' header='yes' outcome='6'>
            <column datatype='string' name='time' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='datetime' name='Time' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='real' name='latitude' ordinal='4' />
            <column datatype='real' name='longitude' ordinal='5' />
            <column datatype='real' name='depth' ordinal='6' />
            <column datatype='real' name='mag' ordinal='7' />
            <column datatype='string' name='magType' ordinal='8' />
            <column datatype='integer' name='nst' ordinal='9' />
            <column datatype='real' name='gap' ordinal='10' />
            <column datatype='real' name='dmin' ordinal='11' />
            <column datatype='real' name='rms' ordinal='12' />
            <column datatype='string' name='net' ordinal='13' />
            <column datatype='string' name='id' ordinal='14' />
            <column datatype='string' name='updated' ordinal='15' />
            <column datatype='string' name='place' ordinal='16' />
            <column datatype='string' name='type' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0m5cjii1lt3la6195eyv01apycal' name='query' table='[query$]' type='table'>
          <columns gridOrigin='A1:R8314:no:A1:R8314:0' header='yes' outcome='6'>
            <column datatype='string' name='time' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='datetime' name='Time' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='real' name='latitude' ordinal='4' />
            <column datatype='real' name='longitude' ordinal='5' />
            <column datatype='real' name='depth' ordinal='6' />
            <column datatype='real' name='mag' ordinal='7' />
            <column datatype='string' name='magType' ordinal='8' />
            <column datatype='integer' name='nst' ordinal='9' />
            <column datatype='real' name='gap' ordinal='10' />
            <column datatype='real' name='dmin' ordinal='11' />
            <column datatype='real' name='rms' ordinal='12' />
            <column datatype='string' name='net' ordinal='13' />
            <column datatype='string' name='id' ordinal='14' />
            <column datatype='string' name='updated' ordinal='15' />
            <column datatype='string' name='place' ordinal='16' />
            <column datatype='string' name='type' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[query]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R8314:no:A1:R8314:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>depth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[depth]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>depth</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mag</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mag]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>mag</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>magType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[magType]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>magType</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nst</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nst]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>nst</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gap]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>gap</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dmin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dmin]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>dmin</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rms]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>rms</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net</remote-name>
            <remote-type>130</remote-type>
            <local-name>[net]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>net</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>updated</remote-name>
            <remote-type>130</remote-type>
            <local-name>[updated]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>updated</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place</remote-name>
            <remote-type>130</remote-type>
            <local-name>[place]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>place</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='African_Continent' datatype='boolean' name='[Calculation_1233423377401257985]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 4]' />
      </column>
      <column caption='Asian_Continent' datatype='boolean' name='[Calculation_1233423377401335810]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 6]' />
      </column>
      <column caption='Antarctic_Continent' datatype='boolean' name='[Calculation_1233423377401409539]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 1]' />
      </column>
      <column caption='Australian_Continent' datatype='boolean' name='[Calculation_1233423377401638916]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 5]' />
      </column>
      <column caption='European_Continent' datatype='boolean' name='[Calculation_1233423377401708549]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 7]' />
      </column>
      <column caption='North_American_Continent' datatype='boolean' name='[Calculation_1233423377401839622]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 2]' />
      </column>
      <column caption='South_American_Continent' datatype='boolean' name='[Calculation_1233423377401884679]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 3]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='query' datatype='table' name='[__tableau_internal_object_id__].[query_4066F5D2304F49218C7F367240DB7DBD]' role='measure' type='quantitative' />
      <column caption='Depth' datatype='real' name='[depth]' role='measure' type='quantitative' />
      <column caption='Dmin' datatype='real' name='[dmin]' role='measure' type='quantitative' />
      <column caption='Gap' datatype='real' name='[gap]' role='measure' type='quantitative' />
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Mag Type' datatype='string' name='[magType]' role='dimension' type='nominal' />
      <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
      <column caption='Net' datatype='string' name='[net]' role='dimension' type='nominal' />
      <column caption='Nst' datatype='integer' name='[nst]' role='measure' type='quantitative' />
      <column caption='Place' datatype='string' name='[place]' role='dimension' type='nominal' />
      <column caption='Rms' datatype='real' name='[rms]' role='measure' type='quantitative' />
      <column caption='Time1' datatype='string' name='[time]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Updated' datatype='string' name='[updated]' role='dimension' type='nominal' />
      <column-instance column='[depth]' derivation='Avg' name='[avg:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[depth]' derivation='Median' name='[med:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[depth]' derivation='None' name='[none:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
      <column-instance column='[depth]' derivation='Sum' name='[sum:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mag]' derivation='Sum' name='[sum:mag:qk]' pivot='key' type='quantitative' />
      <group caption='Antarctica' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Mid-Atlantic Ridge&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;Balleny Islands region&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='North America' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Alaska Peninsula&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Baja California, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gulf of California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Haida Gwaii Region, Canada&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kodiak Island region, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Michoacan, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Jalisco, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Central California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Jalisco, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Puebla, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southeastern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Idaho&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Veracruz, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Baffin Bay&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Baja California, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;British Columbia, Canada&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Central Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Revilla Gigedo Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sonora-Sinaloa border region, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sonora, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southeastern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern California&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Alaska Peninsula&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Baja California Sur, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Baja California, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Central Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gulf of Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kodiak Island region, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Michoacan, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Puebla, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Revilla Gigedo Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Veracruz, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Alaska Peninsula&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Central California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jalisco, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kodiak Island region, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Yellowstone National Park, Wyoming&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.4000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Atlantic Ocean&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guerrero, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hawaii region, Hawaii&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Colima, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southeastern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern Alaska&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Michoacan, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Southeastern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Michoacan, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vancouver Island, Canada region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kodiak Island region, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Northern California&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Central Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gulf of Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Haida Gwaii, Canada&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southeastern Alaska&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.9000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Colima, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gulf of Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jalisco, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Colima, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Haida Gwaii, Canada&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Michoacan, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.3000000000000007' />
            <groupfilter function='member' level='[place]' member='&quot;Alaska Peninsula&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.5999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;south of Alaska&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='9.1999999999999993' />
            <groupfilter function='member' level='[place]' member='&quot;Southern Alaska&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='South America' name='[Set 3]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Acre, Brazil&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Amazonas, Brazil&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bio-Bio, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Chuquisaca, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the South Sandwich Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Falkland Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Haiti region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Isla Chiloe, Los Lagos, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jamaica region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jujuy, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Libertador General Bernardo O&apos;Higgins, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mona Passage, Dominican Republic&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern East Pacific Rise&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Mid-Atlantic Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Ecuador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Tarapaca, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore El Salvador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guatemala&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Brazil border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Ecuador border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Potosi, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Puerto Rico region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Region Metropolitana, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Salta, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santiago Del Estero, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Scotia Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Panama&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Sandwich Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Shetland Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern East Pacific Rise&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sucre, Venezuela&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tierra del Fuego, Argentina region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Valparaiso, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Veracruz, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;46km SSE of Acari, Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Acre, Brazil&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Aisen, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Araucania, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bio-Bio, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Mid-Atlantic Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Chiapas, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Coquimbo, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dominican Republic region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jujuy, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Maule, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Tarapaca, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of El Salvador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Los Lagos, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Tarapaca, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Valparaiso, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Araucania, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Chiapas, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Honduras&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Ecuador border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Potosi, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Region Metropolitana, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Revilla Gigedo Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Saint Lucia region, Windward Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;San Juan, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santiago Del Estero, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Sandwich Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Shetland Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tarapaca, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Aisen, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Araucania, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Chiapas, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Colombia-Ecuador border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Cuba region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of Dominica, Leeward Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the South Sandwich Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jujuy, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Los Lagos, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Martinique region, Windward Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mendoza, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Ecuador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Nicaragua&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the west coast of Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Los Lagos, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Chiapas, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oruro, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panama-Colombia border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panama-Costa Rica border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Brazil border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santiago Del Estero, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Scotia Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Panama&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Sandwich Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tarapaca, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;218km SSE of Bristol Island, South Sandwich Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Los Lagos, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mona Passage, Puerto Rico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of El Salvador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Chiapas, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore El Salvador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Honduras&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Los Lagos, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oruro, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Brazil border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Ecuador border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santiago Del Estero, Argentina&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.4000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Amazonas, Brazil&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the South Sandwich Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guadeloupe region, Leeward Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Martinique region, Windward Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Bio-Bio, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guatemala&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Valparaiso, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Potosi, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santiago Del Estero, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Valparaiso, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Araucania, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bio-Bio, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dominican Republic region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the South Sandwich Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guatemala&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Maule, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Brazil border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Ecuador border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;San Juan, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Sandwich Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tarapaca, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Michoacan, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panama-Costa Rica border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Puerto Rico region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Scotia Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Sandwich Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tarapaca, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Acre, Brazil&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Araucania, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Maule, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Nicaragua&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore El Salvador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guatemala&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Miranda, Venezuela&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Scotia Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Peru&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Chiapas, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Ecuador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Chile-Argentina border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tarapaca, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tierra del Fuego, Magallanes, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Valparaiso, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.9000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Araucania, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Valparaiso, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Sandwich Islands region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;near the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Ecuador&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.1999999999999993' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Bio-Bio, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Coquimbo, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;La Paz, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Valparaiso, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.4000000000000004' />
            <groupfilter function='member' level='[place]' member='&quot;near the coast of southern Peru&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.5999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;near the coast of Ecuador&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.6999999999999993' />
            <groupfilter function='member' level='[place]' member='&quot;Atacama, Chile&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.8000000000000007' />
            <groupfilter function='member' level='[place]' member='&quot;offshore Bio-Bio, Chile&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='9.5999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;Araucania, Chile&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Africa' name='[Set 4]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;central Mid-Atlantic Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Lake Edward region, Congo-Uganda&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southwest Indian Ridge&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Azores-Cape St. Vincent Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Libya&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Algeria&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Mid-Atlantic Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southwest Indian Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sudan&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;north of Ascension Island&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Indian Ocean&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5' />
            <groupfilter function='member' level='[place]' member='&quot;South Indian Ocean&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Lake Rukwa region, Tanzania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='union'>
              <groupfilter function='member' level='[mag]' member='7.7999999999999998' />
              <groupfilter function='member' level='[mag]' member='7.9000000000000004' />
              <groupfilter function='member' level='[mag]' member='8.0999999999999996' />
            </groupfilter>
            <groupfilter function='member' level='[place]' member='&quot;Azores-Cape St. Vincent Ridge&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0' />
            <groupfilter function='member' level='[place]' member='&quot;south of Africa&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Australia' name='[Set 5]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;240km E of Enarotali, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;27km NNW of Lata, Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Balleny Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bismarck Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bougainville region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Buru, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ceram Sea, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern New Guinea region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Flores Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands, New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Loyalty Islands, New Caledonia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;north of Macquarie Island&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;north of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Australia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Kermadec Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='%null%' />
              <groupfilter function='member' level='[place]' member='&quot;114km WSW of Lata, Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;31km SE of Lata, Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Admiralty Islands region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Auckland Islands, New Zealand region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bismarck Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bougainville region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;D&apos;Entrecasteaux Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the North Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;East Timor region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern New Guinea region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Flores Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Kai, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Tanimbar, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands, New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ninigo Islands region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the North Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of the South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Seram, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Kermadec Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Biak region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bismarck Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bougainville region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern New Guinea region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Flores region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Babar, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Barat Daya, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Obi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Tanimbar, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands, New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;north of Macquarie Island&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northwest of Australia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sumbawa region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;115km ENE of Taron, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern New Guinea region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Barat Daya, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Loyalty Islands, New Caledonia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;north of Macquarie Island&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of the South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samoa Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Timor region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.4000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;282km SW of Vaini, Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Auckland Islands, New Zealand region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Barat Daya, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands, New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Biak region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bougainville region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Alor, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Babar, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Barat Daya, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Aru region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of the South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Bougainville region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Sula, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samoa Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Flores region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands, New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of the South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.9000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Flores Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands, New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;76km W of Lata, Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samoa Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Balleny Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;north of Macquarie Island&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samoa Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.1999999999999993' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Biak region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Sula, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.3000000000000007' />
            <groupfilter function='member' level='[place]' member='&quot;south of Sumbawa, Indonesia&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.5999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Asia' name='[Set 6]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='%null%' />
              <groupfilter function='member' level='[place]' member='&quot;101km SW of Atka, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Babuyan Islands region, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bali Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Batan Islands region, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Buru, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Celebes Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Mongolia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ceram Sea, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Chagos Archipelago region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Sea of Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Xizang&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Georgia (Sak&apos;art&apos;velo)&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guam region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Halmahera, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hebei, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Iran-Pakistan border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Izu Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jilin-Heilongjiang border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Batu, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Mentawai region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Talaud, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Komandorskiye Ostrova, Russia region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyushu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Leyte, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Liaoning, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Luzon, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mariana Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindoro, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Molucca Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar-China border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the west coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Negros - Cebu region, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Pacific Ocean&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Owen Fracture Zone region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pagan region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Palau region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Philippine Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rota region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Russia-Mongolia border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sakhalin, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Okhotsk&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South China Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Indian Ocean&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Aleutian Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Xinjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;State of Yap, Federated States of Micronesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkey-Iran border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Uzbekistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Yunnan, China&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;4km SE of Sagbayan, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Alamagan region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Assam, India&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bay of Bengal&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bonin Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Catanduanes, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Celebes Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Sea of Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gansu, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guam region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Izu Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Java Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jilin-Heilongjiang border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Talaud, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Komandorskiye Ostrova, Russia region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyrgyzstan-Tajikistan-Xinjiang border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyushu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Luzon, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Maldive Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Maug Islands region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Meghalaya, India region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindoro, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Molucca Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar-India border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Near Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nias region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northeast of Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northeastern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Xinjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northwest of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Owen Fracture Zone region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pagan region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panay, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Philippine Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sakhalin, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samar, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Okhotsk&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Seram, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Xinjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;State of Yap, Federated States of Micronesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sulu Archipelago, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sunda Strait, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkey-Iran border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Volcano Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Mongolia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Xizang&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Yunnan, China&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;251km ENE of Kuril&apos;sk, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Andaman Islands, India region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Biak region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bo Hai, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Celebes Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Philippine Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Halmahera, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Java Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Mentawai region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Obi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Talaud, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Luzon, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindoro, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Molucca Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mongolia-China border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Near Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Fujian, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of western Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nicobar Islands, India region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northeastern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Xinjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northwest of Australia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of northern Sumatra&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pagan region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samar, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Simeulue, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southwestern Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southwestern Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southwestern Siberia, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tatar Strait, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Volcano Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Sichuan, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Xizang&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Xinjiang-Xizang border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Yunnan, China&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bonin Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Catanduanes, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Sichuan, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Xizang-India border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Georgia (Sak&apos;art&apos;velo)&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Heilongjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Izu Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jilin-Heilongjiang border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Komandorskiye Ostrova, Russia region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Luzon, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mariana Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindoro, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Moro Gulf, Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Near Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northeast of Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northwest of Australia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northwest of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Philippine Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Primor&apos;ye, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sakhalin, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Okhotsk&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Xinjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sunda Strait, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Mongolia&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.4000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Bonin Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Chitinskaya Oblast&apos;, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Izu Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mariana Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of northern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Primor&apos;ye, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Okhotsk&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Simeulue, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southwestern Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Sichuan, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Turkey&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Alamagan region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Andaman Islands, India region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Biak region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Carlsberg Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Sea of Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Izu Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyushu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mariana Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Molucca Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Moro Gulf, Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nicobar Islands, India region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northwest of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of northern Sumatra&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Philippine Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Qinghai-Sichuan border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samar, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Shikoku, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Aleutian Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southwestern Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;State of Yap, Federated States of Micronesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Sichuan, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Xizang&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gansu, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gujarat, India&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Talaud, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Molucca Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Moro Gulf, Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Koryakskiy Avtonomnyy Okrug, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the west coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of northern Sumatra&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Palau region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Philippine Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Qinghai, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southwestern Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tianjin-Hebei border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Volcano Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Turkey&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;61km NNE of Awaran, Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;83km E of Khash, Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Andaman Islands, India region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Chagos Archipelago region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Xizang&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gansu-Qinghai border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Sula, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Talaud, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyrgyzstan-Xinjiang border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyushu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Luzon, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Near Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the west coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Philippine Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Okhotsk&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Indian Ocean&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;State of Yap, Federated States of Micronesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Celebes Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Kazakhstan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guam region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kashmir-India border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Batu, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Mentawai region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Korea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Aleutian Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Qinghai, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sulawesi, Indonesia&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.9000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Sichuan, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Mentawai region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Talaud, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Xinjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Indian Ocean&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Volcano Islands, Japan region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gansu-Ningxia border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nepal-India border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Russia-Mongolia border region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;central Mongolia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Molucca Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of western Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panay, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ryukyu Islands, Japan&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.1999999999999993' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Biak region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Celebes Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Sula, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of northern Sumatra&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.3000000000000007' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Okhotsk&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.4000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.5' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Mongolia&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.5999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Xizang-India border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of northern Sumatra&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.6999999999999993' />
            <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='9.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the Kamchatka Peninsula, Russia&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='9.0999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;off the west coast of northern Sumatra&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Europe' name='[Set 7]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Georgia (Sak&apos;art&apos;velo)&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Montenegro-Albania border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkey-Iran border region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkey-Iran border region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Aegean Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Turkey&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Georgia (Sak&apos;art&apos;velo)&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.4000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;near the coast of northern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Turkey&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;central Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;western Turkey&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Turkey&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7999999999999998' />
            <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;southern Greece&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Continental_Data'>
          <field>[Calculation_1233423377401257985]</field>
          <field>[Calculation_1233423377401409539]</field>
          <field>[Calculation_1233423377401335810]</field>
          <field>[Calculation_1233423377401638916]</field>
          <field>[Calculation_1233423377401708549]</field>
          <field>[Calculation_1233423377401839622]</field>
          <field>[Calculation_1233423377401884679]</field>
        </drill-path>
        <drill-path name='Continents'>
          <field>[Set 4]</field>
          <field>[Set 6]</field>
          <field>[Set 1]</field>
          <field>[Set 5]</field>
          <field>[Set 7]</field>
          <field>[Set 2]</field>
          <field>[Set 3]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Set 1:nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:mag:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:depth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy].[med:depth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy].[none:depth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:depth:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='time' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Time' />
        <field-sort-custom-order field='F4' />
        <field-sort-custom-order field='latitude' />
        <field-sort-custom-order field='longitude' />
        <field-sort-custom-order field='depth' />
        <field-sort-custom-order field='mag' />
        <field-sort-custom-order field='magType' />
        <field-sort-custom-order field='nst' />
        <field-sort-custom-order field='gap' />
        <field-sort-custom-order field='dmin' />
        <field-sort-custom-order field='rms' />
        <field-sort-custom-order field='net' />
        <field-sort-custom-order field='id' />
        <field-sort-custom-order field='updated' />
        <field-sort-custom-order field='place' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='query' id='query_4066F5D2304F49218C7F367240DB7DBD'>
            <properties context=''>
              <relation connection='excel-direct.0m5cjii1lt3la6195eyv01apycal' name='query' table='[query$]' type='table'>
                <columns gridOrigin='A1:R8314:no:A1:R8314:0' header='yes' outcome='6'>
                  <column datatype='string' name='time' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='datetime' name='Time' ordinal='2' />
                  <column datatype='real' name='F4' ordinal='3' />
                  <column datatype='real' name='latitude' ordinal='4' />
                  <column datatype='real' name='longitude' ordinal='5' />
                  <column datatype='real' name='depth' ordinal='6' />
                  <column datatype='real' name='mag' ordinal='7' />
                  <column datatype='string' name='magType' ordinal='8' />
                  <column datatype='integer' name='nst' ordinal='9' />
                  <column datatype='real' name='gap' ordinal='10' />
                  <column datatype='real' name='dmin' ordinal='11' />
                  <column datatype='real' name='rms' ordinal='12' />
                  <column datatype='string' name='net' ordinal='13' />
                  <column datatype='string' name='id' ordinal='14' />
                  <column datatype='string' name='updated' ordinal='15' />
                  <column datatype='string' name='place' ordinal='16' />
                  <column datatype='string' name='type' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1. Geographical Representation of Earthquakes from 1900 - 2013'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='query (Mag6PlusEarthquakes_1900-2013)' name='federated.12x1cap1ixb5ji1368uan1obirdy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12x1cap1ixb5ji1368uan1obirdy'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Depth' datatype='real' name='[depth]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[place]' derivation='None' name='[none:place:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' type='nominal' />
            <column-instance column='[depth]' derivation='Sum' name='[sum:depth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mag]' derivation='Sum' name='[sum:mag:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[yr:Date:ok]'>
            <groupfilter from='1900' function='range' level='[yr:Date:ok]' to='2012' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:depth:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:depth:qk]' />
              <size column='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:mag:qk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:place:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.263370156288147' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:latitude:qk]</rows>
        <cols>[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{909B81A8-42E3-4D73-BE8E-BA2AEC801316}' />
    </worksheet>
    <worksheet name='2. Scatter Plot to show relation between Depth and Magnitude'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='query (Mag6PlusEarthquakes_1900-2013)' name='federated.12x1cap1ixb5ji1368uan1obirdy' />
          </datasources>
          <datasource-dependencies datasource='federated.12x1cap1ixb5ji1368uan1obirdy'>
            <column-instance column='[depth]' derivation='Avg' name='[avg:depth:qk]' pivot='key' type='quantitative' />
            <column caption='Depth' datatype='real' name='[depth]' role='measure' type='quantitative' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[depth]' derivation='None' name='[none:depth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]' included-values='in-range'>
            <min>7.0</min>
            <max>9.5999999999999996</max>
          </filter>
          <slices>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:depth:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:depth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:depth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12x1cap1ixb5ji1368uan1obirdy].[none:depth:qk] + [federated.12x1cap1ixb5ji1368uan1obirdy].[avg:depth:qk])</rows>
        <cols>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]</cols>
      </table>
      <simple-id uuid='{AFF23D86-0CE8-49F7-BD20-B684EDC8D574}' />
    </worksheet>
    <worksheet name='3. Major Earthquakes by Continents (Magnitude &gt; 7)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='query (Mag6PlusEarthquakes_1900-2013)' name='federated.12x1cap1ixb5ji1368uan1obirdy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12x1cap1ixb5ji1368uan1obirdy'>
            <column caption='African_Continent' datatype='boolean' name='[Calculation_1233423377401257985]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 4]' />
            </column>
            <column caption='Asian_Continent' datatype='boolean' name='[Calculation_1233423377401335810]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 6]' />
            </column>
            <column caption='Antarctic_Continent' datatype='boolean' name='[Calculation_1233423377401409539]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 1]' />
            </column>
            <column caption='Australian_Continent' datatype='boolean' name='[Calculation_1233423377401638916]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 5]' />
            </column>
            <column caption='European_Continent' datatype='boolean' name='[Calculation_1233423377401708549]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 7]' />
            </column>
            <column caption='North_American_Continent' datatype='boolean' name='[Calculation_1233423377401839622]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 2]' />
            </column>
            <column caption='South_American_Continent' datatype='boolean' name='[Calculation_1233423377401884679]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 3]' />
            </column>
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 3]' derivation='InOut' name='[io:Set 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 4]' derivation='InOut' name='[io:Set 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 5]' derivation='InOut' name='[io:Set 5:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 6]' derivation='InOut' name='[io:Set 6:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 7]' derivation='InOut' name='[io:Set 7:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1233423377401257985]' derivation='None' name='[none:Calculation_1233423377401257985:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1233423377401335810]' derivation='None' name='[none:Calculation_1233423377401335810:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1233423377401409539]' derivation='None' name='[none:Calculation_1233423377401409539:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1233423377401638916]' derivation='None' name='[none:Calculation_1233423377401638916:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1233423377401708549]' derivation='None' name='[none:Calculation_1233423377401708549:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1233423377401839622]' derivation='None' name='[none:Calculation_1233423377401839622:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1233423377401884679]' derivation='None' name='[none:Calculation_1233423377401884679:nk]' pivot='key' type='nominal' />
            <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
            <column-instance column='[place]' derivation='None' name='[none:place:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1233423377401257985:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1233423377401335810:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1233423377401409539:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1233423377401638916:nk]' member='false' />
              <groupfilter function='member' level='[none:Calculation_1233423377401638916:nk]' member='true' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1233423377401708549:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1233423377401839622:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1233423377401884679:nk]' member='false' />
              <groupfilter function='member' level='[none:Calculation_1233423377401884679:nk]' member='true' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]' included-values='in-range'>
            <min>7.0</min>
            <max>9.5999999999999996</max>
          </filter>
          <slices>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:longitude:qk]' field-type='quantitative' max='40906835.33408948' min='-36660234.148183852' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:latitude:qk]' field-type='quantitative' max='14331371.182624836' min='-12672301.424769064' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 5:nk]' value='Australia'>
              <formatted-text>
                <run>Australia</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 3:nk]' value='South America'>
              <formatted-text>
                <run>South America</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 7:nk]' value='Europe'>
              <formatted-text>
                <run>Europe</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 2:nk]' value='North America'>
              <formatted-text>
                <run>North America</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 6:nk]' value='Asia'>
              <formatted-text>
                <run>Asia</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 1:nk]' value='Antarctica'>
              <formatted-text>
                <run>Antarctica</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 4:nk]' value='Africa'>
              <formatted-text>
                <run>Africa</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 1]' value='Antarctica'>
              <formatted-text>
                <run>Antarctica</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 6]' value='Asia'>
              <formatted-text>
                <run>Asia</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 5]' value='Australia'>
              <formatted-text>
                <run>Australia</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 7]' value='Europe'>
              <formatted-text>
                <run>Europe</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 2]' value='North America'>
              <formatted-text>
                <run>North America</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 3]' value='South America'>
              <formatted-text>
                <run>South America</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 4]' value='Africa'>
              <formatted-text>
                <run>Africa</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:place:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:latitude:qk]</rows>
        <cols>[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{A83EB7DD-5703-4900-AC39-410CC9C68E54}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Earthquake Summary'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='query (Mag6PlusEarthquakes_1900-2013)' name='federated.12x1cap1ixb5ji1368uan1obirdy' />
      </datasources>
      <datasource-dependencies datasource='federated.12x1cap1ixb5ji1368uan1obirdy'>
        <column caption='African_Continent' datatype='boolean' name='[Calculation_1233423377401257985]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 4]' />
        </column>
        <column caption='Asian_Continent' datatype='boolean' name='[Calculation_1233423377401335810]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 6]' />
        </column>
        <column caption='Antarctic_Continent' datatype='boolean' name='[Calculation_1233423377401409539]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 1]' />
        </column>
        <column caption='Australian_Continent' datatype='boolean' name='[Calculation_1233423377401638916]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 5]' />
        </column>
        <column caption='European_Continent' datatype='boolean' name='[Calculation_1233423377401708549]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 7]' />
        </column>
        <column caption='North_American_Continent' datatype='boolean' name='[Calculation_1233423377401839622]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 2]' />
        </column>
        <column caption='South_American_Continent' datatype='boolean' name='[Calculation_1233423377401884679]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 3]' />
        </column>
        <column-instance column='[Calculation_1233423377401257985]' derivation='None' name='[none:Calculation_1233423377401257985:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1233423377401335810]' derivation='None' name='[none:Calculation_1233423377401335810:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1233423377401409539]' derivation='None' name='[none:Calculation_1233423377401409539:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1233423377401638916]' derivation='None' name='[none:Calculation_1233423377401638916:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1233423377401708549]' derivation='None' name='[none:Calculation_1233423377401708549:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1233423377401839622]' derivation='None' name='[none:Calculation_1233423377401839622:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1233423377401884679]' derivation='None' name='[none:Calculation_1233423377401884679:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='12' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='89' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='17' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='4' type-v2='layout-basic' w='98400' x='800' y='1000'>
                <zone h='96000' id='7' param='horz' type-v2='layout-flow' w='96800' x='1600' y='2000'>
                  <zone fixed-size='160' h='96000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='96800' x='1600' y='2000' />
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='8' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='55500' id='3' name='1. Geographical Representation of Earthquakes from 1900 - 2013' show-title='false' w='47800' x='52200' y='125' />
        <zone h='55500' id='10' name='2. Scatter Plot to show relation between Depth and Magnitude' show-title='false' w='51800' x='200' y='0' />
        <zone h='11000' id='9' name='1. Geographical Representation of Earthquakes from 1900 - 2013' pane-specification-id='0' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:depth:qk]' type-v2='color' w='14000' x='76900' y='1750' />
        <zone h='9250' id='11' name='2. Scatter Plot to show relation between Depth and Magnitude' pane-specification-id='1' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]' type-v2='color' w='15500' x='29100' y='1625' />
        <zone h='43250' id='15' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' show-title='false' w='99200' x='200' y='55625'>
          <layout-cache minheight='251' type-h='scalable' type-w='fixed' />
        </zone>
        <zone h='6125' id='45' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]' type-v2='filter' values='cascading' w='16000' x='83500' y='59500' />
        <zone h='8000' id='46' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]' type-v2='filter' values='cascading' w='16000' x='83600' y='66375' />
        <zone h='7125' id='47' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]' type-v2='filter' values='cascading' w='16000' x='83600' y='75625' />
        <zone h='7250' id='48' mode='checkdropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]' type-v2='filter' values='cascading' w='16000' x='83500' y='84375' />
        <zone h='6875' id='49' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]' type-v2='filter' values='cascading' w='16000' x='83700' y='92500' />
        <zone h='7375' id='50' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]' type-v2='filter' values='cascading' w='16000' x='400' y='84250' />
        <zone h='7125' id='51' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]' type-v2='filter' values='cascading' w='16000' x='500' y='91375' />
        <zone forceUpdate='true' h='37625' id='20' type-v2='text' w='19900' x='0' y='49625'>
          <formatted-text>
            <run bold='true' fontcolor='#005500' fontsize='11' underline='true'>Earthquake Count</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>Africa - 22</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>Antarctica - 3</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>Asia - 480</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>Australia - 237</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>Europe - 30</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>North America - 101</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>South America - 249</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='97' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='96' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='55500' id='10' is-fixed='true' name='2. Scatter Plot to show relation between Depth and Magnitude' show-title='false' w='51800' x='200' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9250' id='11' name='2. Scatter Plot to show relation between Depth and Magnitude' pane-specification-id='1' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]' type-v2='color' w='15500' x='29100' y='1625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55500' id='3' is-fixed='true' name='1. Geographical Representation of Earthquakes from 1900 - 2013' show-title='false' w='47800' x='52200' y='125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11000' id='9' name='1. Geographical Representation of Earthquakes from 1900 - 2013' pane-specification-id='0' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:depth:qk]' type-v2='color' w='14000' x='76900' y='1750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='37625' id='20' type-v2='text' w='19900' x='0' y='49625'>
                  <formatted-text>
                    <run bold='true' fontcolor='#005500' fontsize='11' underline='true'>Earthquake Count</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>Africa - 22</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>Antarctica - 3</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>Asia - 480</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>Australia - 237</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>Europe - 30</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>North America - 101</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>South America - 249</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6125' id='45' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]' type-v2='filter' values='cascading' w='16000' x='83500' y='59500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='46' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]' type-v2='filter' values='cascading' w='16000' x='83600' y='66375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7125' id='47' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]' type-v2='filter' values='cascading' w='16000' x='83600' y='75625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='48' mode='checkdropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]' type-v2='filter' values='cascading' w='16000' x='83500' y='84375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6875' id='49' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]' type-v2='filter' values='cascading' w='16000' x='83700' y='92500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7375' id='50' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]' type-v2='filter' values='cascading' w='16000' x='400' y='84250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7125' id='51' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]' type-v2='filter' values='cascading' w='16000' x='500' y='91375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43250' id='15' is-fixed='true' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' show-title='false' w='99200' x='200' y='55625'>
                  <layout-cache minheight='251' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ED9A7BCB-EC62-493B-8230-2EED333AB0BE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='1. Geographical Representation of Earthquakes from 1900 - 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:mag:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:depth:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:magType:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:place:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:time:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[qr:Time:ok]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{5B625E6C-74C6-4ECD-B338-D74EF2DD98D1}' />
    </window>
    <window class='worksheet' name='2. Scatter Plot to show relation between Depth and Magnitude'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:depth:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:id:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B4949248-1423-4D2D-991A-A025C2E4DD3F}' />
    </window>
    <window class='worksheet' maximized='true' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)'>
      <cards>
        <edge name='left'>
          <strip size='208'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]' type='filter' values='cascading' />
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]' type='filter' values='cascading' />
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]' type='filter' values='cascading' />
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]' type='filter' values='cascading' />
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]' type='filter' values='cascading' />
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]' type='filter' values='cascading' />
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 1:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 2:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 3:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 4:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 5:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 6:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 7:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:place:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{603789F2-55CC-4547-A12D-8F5279FFD428}' />
    </window>
    <window class='dashboard' name='Earthquake Summary'>
      <viewpoints>
        <viewpoint name='1. Geographical Representation of Earthquakes from 1900 - 2013'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2. Scatter Plot to show relation between Depth and Magnitude' />
        <viewpoint name='3. Major Earthquakes by Continents (Magnitude &gt; 7)'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{4F0428A0-7FB6-470C-A0A9-085FED1F4554}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1. Geographical Representation of Earthquakes from 1900 - 2013' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2. Scatter Plot to show relation between Depth and Magnitude' width='192'>
      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
      B385Jy1Lcrz3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Earthquake Summary' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOydd3gb15X2fzMDDCoBkAS7SEqkSPViW7IludesnTh2ilPs9LLZTbLZknXa
      t9m0LV4n2e/bJJvNpm3i9OKNHccl7o4tS1axJFKVIiWRFHsB0WcAzMz3BzhDgEUEKVFufJ+H
      D4aYuTN3BvfOPeU95wiKohipVIqzQSKRwO12T/le0zQkSZr3eRfbz95+pmc/F0iSdFb9fCXD
      5nA4cDgcZzzodOcJ4opO4/J6enoHqa+toae7k/LqOuySAEBRUdGUdplMBpvNNu/OLbYvrH1R
      URFKLExnTz+B0grshoLkDuBAZSyhUVlWMus5VFWddRy8GiEWctCS+gZEQedkezsBDxzYewA8
      AdrbOxa6f4soEE6vn8a6SmKJKAPDMXq7TnKyq5fY8ABnt76/ulHQ60lToyB7ETIJfEVekrFu
      vEU+kqND6LqOpmlkMpkp7XRdn/b7QrHYfvb2mqZZotLJrn4aV9Rxon3E2u8EtHn34NWPgiZA
      JKrSUF9NKjrKobY+Lrr0IjqOHaK8thFRFJEkKW+p1nSNe3Z/H8MweO/FH0YS5ydfziQCdIc6
      KfUEccueebU/2+u/nNpPyO8GxaWliLiwi0ls7gAyKcYSGVzz7sGrHwX9OsXBIAAuXwlr12Tl
      yZVr1s54fGfoJI8dexiAq5quo7KoipH4MLXF9WfbX3ae2s43/vRVavy1fPWWb571+QrBr773
      NVZd/0GeuefL3PSxu0n0trFyRSOHDh1lxdq1nDx6mOolS5CcHtR4lIySQHJ66OkdYMP61Wz/
      4+9JFtWgjPSy+YK1JHQnRU4YDsWwGRmWNS3nyOE2Vq7Mfq5atxa7KMyxlwLB8d+pvqHJ+rbs
      HD6HVyPm/3o6A+qLl3H9ihsxDIP64mV85oG/oSfczSeuuJPNdVvoDJ2kvnjZvFeG843SZesY
      a38Ou6eCnY8/TGmxRCgSI5UYpOvBHiJqiuRoD9RuoPfQXnq6+ikLunG7HLhKl4DkRsrESOnQ
      09PLnoPtVBQX4XPKlFe4+fFPW6mp8tDb000sDbXLV1HsWZCf5mUJNZZAEED2nJ01az5YkKcs
      iRLvv+QjZDKZKYP8nt3f57FjD3P9ihu5Ze1buWf391lduY4bVt5U0Lm3LL2UGv8SSj3Bhej6
      tCguDhLu72HzZVsQnGWMhsME3TAgFlPilKmQEigZkcipdvwlpZSWVlPhh65Qigq/g1RxMQ0r
      6vjNA9uJRqNUVVURDHgpcjgoKZVZsypATFForK3kdMcxQnGFYo/3vN3fS41ULI4gii/JBBAM
      wzDO9iTRaDTPDJrW0nx/57cxDIMPb/0YaS1liUD/88J/WxOg1FPGL1+8B7sk8+M7fp13zvah
      NtqH2rh2xQ3YJXle/XolyPBn237ys58vXqtm0AVZAdqH23i24ykArl5+Hasq11oK63s2f4gr
      l19LffEy7j94LwAZfaql4+4nvkwsFQMB/mzVG85p/4bjQwAEPYVJyMrhw6iHj1j/+9/6lnPa
      n0W8dFiQCZBrnfE48pdySZRoKF0OgF20531Oh8mqYPtQG3c/+RXWV1/Axy//uzn3bTg+xCfv
      +ygAX7/12wVNAvXwEcK/vdf63//Wt6Drab7wlS/zfz79GVIZSCkK8WiItGFjecNSAH76819R
      4nNw0aVXM9LTxfIVzRw/dpzqmioee+pp6isrSNo9XLx+Db6XYPlfxAJNgGQqYW0ncrYnY3lZ
      c95nLj517T/SPtTGNc035H3fMXKcmBqltXffOert/HB0/wssrV/Ki0dPMjbUDagIYoBULGxN
      gEBpkNddcwHf/sGPaWpaQ2/fCYpKGnh+zz68gQDBYj+Ku5Ttz7/Ajddf/ZLez2sVCzIBPLkr
      wCRb/f6evTx46H5ev+YWBqL9AHSFTk05x/KyZpYWN2CT8rt4TdP1ADSWNk1pUwiCnjK+fuu3
      re35Ipyx8cH3fZAdu3YgJuNsuOxa9u54jqGREAOD/VSUVyIZGZ56Zi+3vP5m2to7qa+u4cWD
      x2latYLwcD9xNUN1fRmp8Oi8+7GIs8OCKMEADx66H8MweMPaW3n06EMc7m/lPZs/xLe3/z8O
      97eyumItN65+I19/6l9YWtLAv7zh36ec93wokd969ut0jp7iSzfeNcWxNtfrP7/9WbzFZaxf
      vXLa9qnkGKMRjcqK0nPW/0Ul+OxQ0K/bcewwGZsbj5gmFIng8wUZjkTw+YppWrZkyvFDsUF+
      vf+nAFyydBs/2/sj0lqKhmATDlv2ITtsTnrCpwHoCZ8mkYrzhYc/AzDtYFwotPTuJ6ZGGYkP
      z3jNodggQ7FB6//VldM7AbddevkZryW7AlQukFs2HRuhtaOf+voldB0/huT2IZMiktC4aPMF
      vDI8LucfBU2A0dAokhBFCZSyYf1KnntsHxdcfxl9He3TcoEGIv2ktbS1bSqyhm6QymSpWSlN
      JTN+jK5rDEYH6Ql3AzAYHWSJv3bOXJrH2x7hyMBB7rjo/ZS4Swtq//dXfY6R+DBVRTVTjjXb
      P338cX7XOmGmvef237J/93Ykbznx8Ahbtmyx9t33m59z9c1v5YkHfsvWG26lyj835faFPS9w
      yaZL2LVnF5su3EQmk2HP3h1sumjrtMebXKCR/gEEh52BgVMUFdcBMcBGnQOSwGvHqzA3FDQB
      yssrCMdUKvwuWlvaWXPxGtpbWglWVk/LBbLb7HnbmpGlYxnoGBjj21Dpq8qev6iCpaXL+MQV
      dwKwtHQZMCECjMZH2HHqWbYuzb5hZ3Ke/Xr/T1EyCs3lK3n9mlsLEiGaK1bNuM9sL4r5pFmb
      zUYsoZKMniSjavz+D/eiJDO8/R23Ewh4adm3h9N93ezZ/TxtLfu45LIr2L9rJ8uamjl2tJ0t
      mzZQ3nABx/c/R9vxNpqalnHo4GHe/M73UewU2bPvBVwllfzo+/9NSd1SimSDR59/lIwioYaG
      OHL8JHd+9nO4xnlAkiRRXldH/5GTeEorSI4NII1zgQYSGhVnfALnFrquIwjZV575+XJGQRMg
      l1tSUVkDQHGgeMbjc9UKw9AJuEoYiQ8RcJdQ5avmcH8rVb5qwkoYwPrcsvTSac/3o13fZU/3
      CxwbPMLyshXs6trBvp693LDypjyb/jsufA+H+1utibLQuHjjOr77k/9lRWOl9Z1N9tJ+ZD9r
      1l9ENGVw0eYtGGqE2qY1xGIxGmor6Bkc4vTwc8iiwboNF+Gya2zZdjnlJQH8dRX8w5e+zOf+
      +iPsdftJkQLsRIZH6RtM0FAV5OqrrkWeNClF2cvGDeuy/yyZ6M/Zs68Kh67rczreMAwMw0AQ
      hJdsspwHwolAKJGl54YSI7x78wdZWtLA5Y1Xs/3EMwA4bc4prb717Ndp6d3Pp675PEUOHwBF
      Dl+ODuGYYtO/YeVNBVMq5oIrGq9hVUW+3H/VtVnz7Gc/+ddTvjf3zVeJ/5cvfQWA973r9rMy
      ApwPmGKizWZD07S8QS3L+R588/tcRCIRXC7XS6aAL8jTNQw9b3tC7DH42Z7/4bFjD9MVOkWJ
      O2sNiYyvADtPbQeyK4GpnJ4YOU48FQMgnoqdtRl0PijzllPmLT9v13u5IJ1OYxiGJeaamDyI
      RVFEEAQkSbJWgekm7uR2mqZZ7aebHOcDCzIBSr0T9vWgtwxMiWiSwbWiqMr67A518o0/fRWA
      Gv8SLqnfxnMnnmZDzYUMRAey5/WUEVWiHOk/iIDADWU3nROb/iImYBo1TFk+mUyi6zqBQGDa
      AWoO/snbhcJmsxGPx/F6vS/JarcgV1TTirWtpBU8sodYKoZH9vCGtW+irngplzdeTUyJUuWr
      4bKGKyn1BKnx1wJQ6gnyp46nSGspXujcQX+0F4D+aC87Tj3Lrq4dtPTu44aVNy0O/AVAPB5H
      FEXsdrsVcH+mgZ27by4TwGazYbfbSaVSGIZx1n6f+WBBrlZbXM8nrrgTw9CzQTDmQxGEPBGo
      3FtBX6SH+1t/yy3r3poX4OKwOUhrKRw2B69ffSsAb1h9KxVFVRwfOsbqynUL0fXXPARBsKxe
      mUwGWZYXNGOEw+HAZrOhqiqqqs640ui6jq7r53yCLMgE0HSNIwMHMQyDi+u3Tdj+MynLoTQU
      G+SWtW+dcTB/6prPZ7lATddjl+Q859PfXPXphej2ax5qIkm0s5dAUz2xWAyXy4WqqrhcrgWV
      zyVJwm63n1ERVqIxIh3dVF645pxee0EmwImRdisk8vLGq9lUdwktvftYVbGG4Xh2AsymVM7E
      BVrEwkGy2/BUlSFJkiUCTfaBLBRsNhvRaBSPxzPtiiPAgvRlQUaXKIh527m05WWljVY8wCNH
      HsiT5xfx0sJmt2MLZJ2YbrcbURTnPegMwyCZTBaUtMswDFRVRVEUBEHAZrNNEb1cfh+ujb55
      9eVMKGgC9HWfIqJCXbmPju5BVqxopOPYMcprGynxTSW3NAab+Mi2v0LXdRqD+ebKcHKMI/0H
      CTiL2br08jwRKNcMuog5QldoPdhBVV0d8dH+vKwQTQ1zd4fNV9bWdR1FUdA0Dadzqn8nF4Zh
      EIvFEASBRCJLm1cUBcMwkGWZQCAwY1uTfiOKIjabbd4iWkF3GY6EMexF9AyOsqa5ihe272XV
      tksY6uwg4G2YNi/QpUuvnJaL8+Nd32N3907aBo/y+jW3cnjgIDbRRnPZKssMWllUPS8u0GS8
      FtqbXCA9NkZCMzCMJGndRToWJgm4wPpcaOi6TiwWw2az4fV6ZxyUhmGQSCSIx+N53mNBECzz
      62wk5XQ6TSwWw26343K5yGQy89JVCpoAVUuWMtTVRVK2EYnGcHldxKIR0hrTcoFMTGfWWlO1
      nta+/aypWs+h/hZiapSdndv5wJa/sMyg5UXl2Gy2V0RM7kvd3uQCZexeNqwu5vjxo9gkD5Ce
      OGbePZgb0unsNc80EA3DIJVKEY1GAfIGu/kpiiIez5nZwA6HI09Hma+lqqBfR9DTuMuraAz6
      6eodZMNFG+jp7mT58saCLpJLa8ilK7QPtfHwkQdYX30Bbtlz3vL8vBohu1ycOnGK5pXriIcG
      83KDzi+lwNyRTCbxeDx5g1/XdWuQmm/+3FVt8ptekiQcDgeqqpJOp3E4HEiShKIo2O1264Vg
      XkNVVZxO58JOAF9xEFP9qK/NkuFqaguXK3NpDdOFPy7i7CEIEssasy8kR5lJhnNSeX7CKkil
      UghGvu5gGAbxeByXy4UoimiaZr35Z4Ku65Y+AFmnnCzLqKqKKIoEg8G8CWYYhiU2zUcPOC82
      xk9d83k6Ro5z9TiPx0RufK+ZThGymSNOjnScdVqURZw/qPEEiZM9+C+cUFw1TSOZTFpEuWQy
      iSzLnCkd/+QVwVSqYeKtb1I1EokEyWQSu92OJEn4/f5ZJ4F5fvO48zIBHjn6AC29+2ksbWJZ
      aaOVGS6tZR+EqqXy0ileufxa7n7yK8TUKIIo8LqVrz8f3VzENDAMwyLFybI84wDz+H3ojUIe
      qc1UcjOZDKqqWgr7fKHrOpFIhGQymfd9Op229A/Th+F2u6ftazqdRhAE7Pasufe8TIBcEejZ
      E09ZibEurt+GbHOwqmKNlU4RsqkVza6//EMqXp0w7fiqqhKPx8lkMhQVFVFSUjJlYJmMUZ/P
      RyaTsSgLpux/ttYwE0r7aVhWPeOgMFcKwDKNCoJgTTxRFHE6nXn9X7AJMBwfQtd0yn0T8UiT
      DVtrKtfxo9t/Zf3//ks+Ym3LNieo0eznIs4rTGW1v78fRVFwOBwIgoCiKAwNDeHxeCwHlymD
      m29+0xSqaVqeJcdut1tv6bnClPHlhmoKDbkJhULWtqlUQ7aiTiAQsCbngkyAwegAd/7+4wB8
      9Y3fYmX5avb3vEhjaRMXLtlMTI3xhjVvOuM54mo073MR5xfhcBiXy4XNZsuaWTMZNE1DEASi
      0SiapuF2u0mn06RSqSliCWApvKIontXgn3HfcBjBbkPwn1nTNwc/ZEWgkZERGIlkPd/z6tUs
      iKoRKyg+qoY5NXqCjJ6mJ9zNHw79jl1dO9D0zBlJbe+48D0c6ms5b+GNi5iAqqqkUimLqWl6
      XAVBsAhrmqaRSqVIJBJTlNpci4zNZpsy+CcrojMh97hpYxGC/nndn2EYpBUVZ1VwYSZAPhUi
      3+y5smINe7pfYFXFmVl9N6y8iWuW3/CyDwl8xcHQOd3VhS45qFtSNXW3YRAOhy0l0e/3k8lk
      iEajliji8/mIx+OMjY3NfJlxkWiy7G+GTM4Ec6DnHjdbtFghnmMTNpsNn89HRJJwuFyF1QgD
      GBkZwdDSdHb3ANDT3Ulam/miVy6/lssbsun+3nfJn3N5w9VsW3Y5fZEedEOnN9JT6KXPiOH4
      kBUY/1qHEo8QU9KMDvUTjiso8TD9Q/lZ55TBNvZ1DBFLTE1ZaSq+sVgsL8wxlUpZpsxUKkUk
      Esmz1U93HlM3mG7f5ONy/0ze/2SYesbkCSQIAmpbV8E+gKKiImRZpri4GFmWC8wLNHCawycH
      qCp2U1bm48DeAwSXLaW9vYNVK5bP2v47279BTI3SEFxObzg78HvDp0lrKZ48/hiNpU1ndJAd
      7j/Ig4fv4/Wrb82LC5hPottXLwxOdRxE8C1DT8aBrBJoB1JlJZY3eMe+Y6QTGl1CitXN+Z78
      WCxGPB63LCglJSXEYrE8fk6uXb4QTPYKF3w307zRJ39n9snRXJeXjsVErhUKQJZla1uSJAzD
      KGwCdHafRo3FSBR5Ci6S90Ln8xiGwZall7K+aiMtfftZVtJI20A2zbjP4efxY3/kJ3t+gFcu
      4ttv/Z8p1zXNZ3849Dv29+zFMAyagysn9mt63vZMia3mi1dCe9PEN9bfRSIjoowOUe6bKIs6
      uUhe0C0wJlURj4amnMdUZE36gt1uz6MclJSUWGzN2ZAryuR+LgRyRSRRFAkEAqiqip7JcOJb
      v2LJX7wFj8czhaMkCEJhE+CCTVsYHh7GI4sFFcnrDnXyn9uzuT7rS5fy8Ss+ae379f6fARBW
      xqy6ACktdUYy3RvWvAlBEHjD6lvzjiv3VZwxKP6VQGY72/YmGa60ZhmlFRUMxyA+2jNjkbwl
      DSvY+cedrFi3Me88pshjWnp0Xbe4PZIkIcsymUym4IFs+gZyRZZzGVVmDnozZsG0VHm9Xsvb
      LEgSy//8LbhLSmbkCk15us88+gfCis66TdtYVj1RhsgswFZIkTw1o067DbC5bgsnho+zuX4r
      jaVNeB1FrK++4Iw3u7py7Yz5OF/bYs8k2NwEAxAMzFwkT5YMGtZsIjxwgsGROspLswnOBEHA
      5XLh8/kIhULY7XacTmd2dRkbQ9d1K8/PTErn5O8ny+tzXQWsCZNQwe2Y0t5ut1NcXJxHtjP9
      FYlEgtLSUiTfmYNo8iZA78ljdA+O4Zul0WywS/ZptwFet/L1edSG7779J2d1rUXMDY7iJcjt
      +whUV5NU8s2XbrebRCJhxecKgsDw8LClHJsrfa54M9lEOfm7yfvmIj6ljp/Gs3oZyfAIstdl
      KcKQtebkDn6znaZphHv7GXtqN8YFq4l1dLP0zdcXtgJULW3iIkWncVktHZ2DwPwK0ZV5yy1u
      f5m3nPahNjpGjlsB7tMhnorxxYc/C8AXb/xXPPJiOteFQCrcx962Abatq6O+Jj9rqBma6Ha7
      sdlsJBIJotEogiDg9/tRVXUKHVmSJGvbVDB1Xbds/+l0Gq/Xm1U4bba8Y2ZaSUwRxtFcSyqV
      QqosQek4jaOhxjreDLiZbCLVdZ3Of/0hQ/c+jr26HKG0mCVvvJpUPIHN5SQViTLwu8cIbLsQ
      OVicPwHS8TFaW1s53dPHJdvOnQPqrie+RCIVRzd0JEHily/ewzsufE9eHHBXqNPKDt0V6qQ7
      1Mmhvhbee/GHKfFM5NM/2xJJr3W4Smsolbaj6PnSr2EYhEIhdF1neHjY4vJ4PB6LR5PJZMhk
      MnmhjpOdVZIkEQ6HrfQmhmEQiURwOp2Wcj2TNUjUDUTdICNldUPTwKIoCs6q0rzJEg6HicVi
      FBUV4XA4SMXjyOPUi9jxLsCg9kNvovGj7yR89CQ7b/t7PFWlCD29EIvTU+LHcfHGfD+A7C2h
      IuAmnYrT2d0374c8Eh+mJ9xNT7ibkfiwlfvTaXNyuL8VJaNwuL81r403543vlb388sV72N29
      kx2nns077uVSIumViof+8CArVq9iLJTvH0gmk4yNjVliSiwWs/apqmpRmdPpNJlMJk/MSSQS
      xGIxi6mZK5MD+Hw+lD1HOflPP0BLpdE0DRsCY4/uQgSSh0+SSqVQkwpqNG7lGDWVcafTieSQ
      8ygN5n5N04gda6P/nR8g9PhTaKkU5Tdfiefi9VTdcg2yLOOtq6T+/bcQbW1Dj2bvKzMaxtNc
      P1UJFsgQCkXpe/4Zli59N0XzyFla7V/ChUs2Y4xvp8Zpz2ktxXs2f4imshVTKA5mG3O73FtB
      11gn5d78ZTo3N6imazx/8k8AbFt2xSum8PZLCYfDiSTZsNvzf3pzsEE2uEUURUKhEIZhUFxc
      bIkw5v5YLIbH4yGlqthFCZtDPqN8P/T4C5z+2cPUf/RtJOxZBbbshkuyNGuvB4fbnV1hHBkr
      +CWdTmedVeN8JJP2bFKeyWjEO7pI/dd/ow8NE/78P5G4aCON//wFVnziXVZ/XQE/a+58PyUX
      rSa6t5WRn/+B4hsvp+mT75/GDGpzs7SxFLsUmNfgB+gMneTF07ut7dyAGLsk8/o1t87aRhtP
      sKsZ+culXZItJfrESDv/tf0/AKgJ1FrVJxcxM6678eZpvzcT24ZCIZxRlUyxxyK7qbEEqXSK
      QLDU4gOZb3k7AumRMPLSmjMGuiz/Px9k6cfehljiQ1YU7EqGdCJKJhLD0VCDNhrBVuRGGuca
      mStMMpm0FHKHw2HFFrhcLqI7Wxn5xg8oTQyQVHSGQxrB51/E+diTBG97U55uIEkSS67fhn7t
      FjJ/937LfDxlAtTX1bL7xQNc8brN837IJrffMAzqi5chidKsoZCT4wG+dONdDEYHrWIZhbRZ
      ROFobW1l3br8jHyCIFDkdJPpjyADepGOINsQ+kZx2iWKm4qtN3AkEgHA7nFTUlmRZYSOjpGx
      S9MmSTAkEd3nRj3aibuuErHIg6JnEP3Z/EPJgVGcsh1Rtlt0bEEQ8lIlSqJI+mQvDI1iVJYh
      aRlkwSAe0xiNaoQi2Zdl6fDIjPctimJe2va8Xo72nmD/4Q6cTicZbW7FDs4WkijlxQO4ZQ9L
      xi1JhbZZxOxIhXv530d3oacTZEQXF6zJrpo2m426ujoAQiNhfM1LGdzZgnNVPSlNo3hdkyV6
      CIKAMRKh/5Ht+NY14bsiW8pJGR5DKA9YeX4cDkfWItTWjWEYSA3VeJrqSLR34ygvwRn0k06n
      URQFubkWYdyZZeYknWxxMjSNwXufoOLGSxFFkd67v4s4lOWB+YskQKCs0oVr2yUFO93yJsCx
      jlMsqakCdE60HaV6y4UA9J3u5FRnP5XVJcQKKJKXG954VdN1eaLJo0cfmtYKtIizQ0aJ036q
      G10QUSNjMxbJ07U0ot2BaLOhJSfYnOabMZPJUFRXTbStE09FKR1f/gHBazZz7MvfpeqWqwi3
      HKfqxsuItXXiWV6LvKKOnudfRBQlHA1V2EWJVCKJsqMVx9Y1pJ/dTd/TLaixJI6yEiIHjrHp
      3q+B3WaJNaZCa64ups1eMEALx8iMRpCWlKEnVYKXrEHdsQepbgkMDWc7b4B3ZQOlNWV43nwz
      RetndtJORt4EWL/hAgZHsg+ltHyizE5RURGG0IeaEVhXQJG8Jb46rmu+EQyDJb46vvnM12jt
      P8Anr/och/paUDIKh/pauGZ5fhHsXDze9giHB1p510UfsAppzBWvBC7P2bY3uUA2pwc7KTRZ
      Rj5DkTzB7qXIKbBmwxbqqqb6eSRJwuZykh6LItkken/1SHbbYc96g8uL0UQYO9iOb0MzqePd
      JDv7qbvtesIdXfT+cQdL3v9GHFddhPH1uxGPHqWuohrH3V8kFY4R3nsEwW6byBhugNo9gNo/
      gqamKL5soxU3nDh6ivRohMrrtzDW0oa8fAnOhiWMHWtn6GcPMBjKUFokIooCwlVXU/3Rd825
      RkHeBPD4ilnmm1r7a2xsDK/bhc9TWJE8gBtX34yu6ch2mdb+A8TUKJ2hE7z34g/TXL6SrUsv
      PyPPxSx4t6J81bRKcyF4JXB5zra9+cZU42HSgowseknFZy6SJ9rs2AR49rnt3HHbLXnXGh0d
      tegQ1VdsIpNK41+7nOSJ0xRvWYd3eR2lF65idGyMwDuuwxZOIBd5sHndjBw4hmd5LTXvu5lQ
      KIQLUI914gGkSIj08CgZJYOnOZsu37Q4jT6+C3UwRNXbriM1PIbSM4i9sjTL8XHIlFx5IfGT
      vVRdsoFQKETRBWvp/t8nSbR3UuQWs/NIECjauGpeuYEK+nWW1DewZDwNUHX17EXy+iK93Hn/
      XwHw1Vu+yZvXv53Hjj3MZQ1X4ZY9BQ7oxbD4ucDh8bNyhRkhNSGWTs7eJEh2KiuCaHaVyTAH
      pUmIc7icrPzXT6D2DeFbvZxU7xCSy2ElvXXXVpKMxogdPkHpNZtJjYwx/ORugjddiuh24vzI
      +9Gffgrx6muIxRTkyiBGKk3//z5J2RuvJD0UQvK4KN66hOTJXtLhGK6mWuv6rmXVWe/0aFYq
      EYbD7P/sN0iPRSkrkygqkhkTS/C9+zZKt144r+d2XnJf//bAL+iL9PBMx5MFtylxl+R9LuLc
      4Jtf/WcOHdhD8wVTExA7nU6Gh4eJRqP0vXCAVCqFZ00DgWs2422oya4GKdWiSauqiuSQ8V23
      GWwSWjRB8OrN6DYRfSTC7n/9NaGLr0ffsoWidU0MP/4Co8/uo+uH94OaIrq/Df/WdTjrKun+
      0e9JdJxGcjuz6RP7hslEs1nk/KsaAOi99zEG7n2cstdtpbihDFEUqHrvG6h9z35v8dEAACAA
      SURBVFuQ5rnSCsY5IGpHo1GKioqs/xOpOJ954G8BuOvm/8s/PvQpeiM9/NXln2TrsgkH2Jlo
      DYlUfFYz6Gx4JYgwZ9t+8rOfDYah03ZoP10jKa6/cqLAdzweR1VVEonElJTmqqpascDxwyfx
      rmmwPMaZTAafz0fi9ADP3/zXrPznj5EORfBvXIHgcpBxy9iUNHJZcZbW0NGDWORGD0Ugo6P0
      DeNaVg0ZDfeKetK6lsfvSR/vYuzxF0jHFfp/8yjOsmKa//1OXMkxEv9yN9KKJsq//Q0rhHOu
      WLCsEGYhjMHoAF++6W5G4sPUFtej6ZqVGOv48DFiapQDPXsB8mr+FmIGXcTcIQgiK9ZeyIoz
      HJObz3MyijeuyNrtk0krwZSqqrhqytn63A/w+XyoSYXIkRN4llQQ7R/CHsxmixNFEXdTbfYN
      LwqkuwcZeuhZSKeJ94dY91+fheKsum4YBkIsycH3/SOp0TC6ILLpN1+jZH0zrtJiMrE46o03
      0v/4Xop6B7HX18zreSyICJTMTKTISKYTPHfiGe498EtG4yPcs/v7/MODf889u7+Prme1fU3X
      GIoN8sn7Pson7/uoVUbJxKNHH+IDP38Hjx59aCG6u4hxmBanZDJJOBwmmUyiaZplq1cUhbGx
      MSsIxRQezIxtsVgMVVXx+oqo3LwuW/kxPUGAMy1WhmHgrirDUVGKzWFn9KldLP3wm1D6h7M+
      AVnG7XbjdJqhPAJyiZ/i1Y14y4PZBLp+H0W3vwOjppb0eJG9+WBBJkBtoB6nzYnT5qS2eCm/
      fPEednXtmEJsy1V0RxPDpLU0aS3NaHw476iDfQdQMgoH+w4sRHcXwYTJ1eVy4fF4cDgcWYfo
      +KRwOp04nU7cbnde8QvDMFAUhVQqhcvlssIOTetUxZom7IigTqRGKSoqori4mMoNK2n+t79h
      4xPfxXXhCqgrp7q6Gp/PRyAQwL+kklVf/Tvcy+vY/Iu78FaV56VqLKqrJvim6zjwxo8ROdk1
      r/tekAkwEO1DySgoGYWBaB+3rHsrVb4ati69PJsK3e5mffUFeYpuwDWh7Ba7S2gfauPxtkdI
      aymUTDYI2/xcxLlHbmV3k+0JE2bW3IwMY70DdP/+aVLROMo4S9RpsxMMBqfoLIIggK5jqGls
      NhuBQACXK/tmj5zux+50IJX6Ef0eRLuNwcFB7Ha7tVr0/OB/SZ86TSqUTcuSVlSO/8/vrPDM
      0DO7iQ2MYczTWrggE2By4PGfOp6iL9LD0cHDPHzkARLpBA8feYCtyy7n327+D758092ElQmv
      5Jgyxt1PfoV79nyfJ48/xqbai3HanGyqvXghursIJtKSx2IxwuGwlc7czL5sijCpVIqUTcB/
      8Rr04TB+bxFOu0zo8V1kUmkG9h2eIo64i7MD3AyzNJmnHd/5NV0/+B0+n88a9JFIBEVR6H/h
      ALqu413fjCGI7P/zL3P0P36CzSHT9L43WcE1mmTDt2U9ntqpOY4KwXkplN0XyRa67ov04LZn
      LQzmpwmH5MjbNmOJ1YzKG9e+mRsWM0QvKMzEsTCRIcKMzDIHtKkPFBcXc/ijd9Hw1+9EsGfz
      BTW962bSaopMfGqKRLMM6mRHVXpkjPRIGEmSCAQCOBwOYrEYsixTtWUjgiCw8vN/idJ6FLXl
      CMn7Hyb5rjfgKQ/Su/1Fen73JN7menwbVszb2lZYkbzTpxgYilBdXcpA/zBL6uvo6jxNsLKa
      moqpNIVpMrpYW2YFSVEQ2XlqO9/401ep8dfypRvvotybpV+UecvRxjNGaHomLy+QLMmLEWHT
      IK3E6TjVhcPjRw0PWZ7gsYTG+rUrZxUQDMOw3vCQNX0ahoHL5SKRSFgJcSORCLqus/Y/P03G
      MOjr66OiogJRFHG4nARWNTB8uJ2yNROB+YIgUFRUZAXTmEm2Rp7bj66oDP9pL6WXXoDf78/L
      8a/rOoYo4I0M4XALaL29jD3yFM473szo/qMANL7/TQtfJK+8vJyhUIKxaJJ165fnc4HG7bu5
      nBXTumNuCwgYZOVHZXx1UNIKfeHsyjAQ7SOSjBBKZmmskWQEu2RHzahIgi0vL9D6qo3E1Cgt
      vftm5cm8Erg8Z9velJXtTg8Br4uMLYXmrAA9RhqBCqeNOBNcoJlgt9txu91Z1uZ4bIApZwuC
      QDweRzo1iLy00kqMZU6Q3CzQzoAPh3+qX8IKYhlvZ7PZqH3PzZy6+4e03PEZVv3oK1Rft9XS
      DzRNY3BwELWlA0OUSKoGw2GNoJgd7E0feovlkBtqOUbx6sZZfQFmfTIzwAYKnAC7d+2muKwG
      h2TQ2nKU2qZajra04vMVT8sFknKKW0uihMPmRMkkcdknihYIAly5/BqeO/k0VzReTUgZtRLq
      hpRRvA4famYIn8uflxdoeVkzgijSWNo067L3SnBknW17U0mNDXVxpGuI1c0NDIU6LDZoV0Lj
      ogKuZeb8TCQSZOJJDDF7biv+N5IgJduREilkvwdVzAam+3y+PJ/BdHycVFIho6i4i7NUjfhI
      iETfEMUXrGSgsY7w0VMIGY1UIonT6SQSiRAKhRDH4ow+9CdCbf3WCtZz/zOET/SBAQ1/8Tbs
      Xjf2YIBE+wkyvf04V6/EXVk+7YqgaRqHP/PvVL35eiov3wQUOAG2XHbllO/OVCEsLxcMoIz7
      BZRMkrQ+ni1Az9A2dJS+SA/PnXjGCoeEbExwVMkGXESVCFctvzYvL9BixZip8JbVcXVZls9f
      EZwfe1YQBJxOJ/GO09hqgnlv1NTACK6GGjRdQ9N07A4HgUCgIAKalk6TjsZhfAKYq4S0pong
      tg1sv/kT7H//Fyjb0MgFv/w6oteFLMvYazy4ltUwkDbwFknU1TixBV0c//pP0AyD3h/dj6Mq
      iDIaJmDECXp0NKeXim/8M86ltcgBP6IoEu0doKi6AkmSWPG5jyD7JtbDBVGCbTmxubZJcbrS
      uA4gCSKRcctPRBnLM3EqGYUybzk94W7KvOVTzt8d6qTUE8Qtn6cKcK8heDwe+ku9SEzk1hQy
      Gq6GJWiSgM2WDYwvOUO2tVxo6Qyy24XLNyEW5bZzejzUvfdmju4/QuJwB/1P7EASDCreeC0I
      IvLb/wwjHKa8Yzu2VBKDfrrKA6hDY+hqinT7KdSUzpAIPpsdQ4ly+gN/R0Zy4L1mK7Vf+Fu0
      8fxHgiDgLsvnli3IBDAmbQc9ZQzHhwh6yjguHBvvjGjF++qGjk2c6IpNtOWFROYqwRElbCnO
      i2VVzz1kWaaiooJQKEQikch6XbXxtOnPt1J63Wa07kGEYHDWtOUAfc/vw1bkpvLC6dPhC4JA
      /dtvRDJ0+h96lv57H0fbsx97sJTh5w+QOX6C6AsHCF6cZR+nw1Gav/iX+NY0YRS5GPrBbxn9
      6X3YJNCNrGvVSKXRMmlC//soSs8QNR95K5macuyTyiPBAk0A09Jjbi8taWAsOUaNv9bKB5rR
      M3lUiJQ2Qc9NZVR6wz20D7VRE6jJU4KvaLzGOm5yZcnFrBDnBh6Px1J04/E4uigiiAKlN24l
      2TuIva6CU/c+Ts31W/CWnVncqrpsdpqyw+Wk4X1vpu5db0SNxnnh5o8T6xlE9BcxcLCLxs/8
      BSm/jD3Wj3vb5QSbV1p+isA/fpzB6mIS9/yCkWGFIpdIRgNDN9B0iO3YR+fRI6z+y2tRb/sw
      zpIg6VQKtasbe2XlwkwALccKpOkae7t3YWDQ0rsvL1uwOD5gJVFCIDfFnZhXJTLXJLpl6aXU
      +JdQ6glycqTDCr28vOHqxRrE5wi52R1ME6OqqsRisawFxzCouOlS3D6fRYUwrTeTUWiQikms
      sxX72fbwdxBlG4am0/C+W3AHfFYOoGQyyejoqOU8S6XTVP/l+0jccAXlw6MM/foh1D9Mpd2L
      o4NknnmQxDW3MvqZz3P8wRfx1ZcvlAik520b40KRMclDIOX4BGTbRKS+bJNZX30BLb37aCxt
      ojd8mta+A1T6qgGoLc6q4A5bjvPMNs8cLovIg5kUKzdLtCzLVryw7s7+TiY9OhQKWYl1c8/R
      tz2buKzq0gtIK9nVXXbNXvBQEAREu8RoSxtVF68Hjxtd14lGo9bENFM4iqJopWssam6CZnCv
      X8twXSn6zu1kMgbJ0SS+Wj9qVCX1wouc/N7TlIx1Eo1paCcGFmYCuHOyvHlkL6IgoRtanmgE
      4HMGrM9kOpdBmqS5bCXpTIoSdynv2fwhrlx+7ZTUJ7XF9Xziijut7UWcG5jOL13XSaVSaJqG
      y+Wy8gGZnB9N01BVdUoyZcMwOH1f9i1cdsk69v7tV0GAi7/1uYJWBNnppGJT1upnUjTMwS8I
      AomjnQgr6y1nnRmvIIoiDq+H4hsuw6aexDAMjj7SwZFHT+Dx2Fj+3iuovOUC9J/9hOXLHMhy
      gfUB5oq4OpFWL6bGMMaV3ckckVJPEIfNQbV/ybSpEZWMQnP5Sl6/5ta8zBK5VqAtS6dGNs0V
      hq4jzMB/f63B9Nqaha09Hg+yLFtVI41TA6iyk1g0jlxWbJlOcyGKIhfe9TdAVgSqefM11veF
      9gGywT4m8zPXieZdtdSSJcw6ZJFIxPIi2xpXoZeUo/f1EukOI4qgpTTCYhm1t7+FkQMv4j14
      CCFYujBkuFxlVBLFPBEoN9L3UF8Lzd0Zah/ci/SbB3n9YTu1IdM6NH1M8M5T2/n0A3/NFx7+
      zJTrtg+18cejD1oV6AtBYs9eYo89Noe7e/VDFMW86o6KouDxeLI8oI0rkN0unCV+7HY7Lpdr
      2re6zWaz9Ifa67dRe/22OdEVzAzT6ZEw6eEJoqQgCDCeNS73fKlUimg0imEY2J1OuO3DsH4T
      JauqkSUB0eMmcP3l2JxOpA98iOELrqbsnh8WtgIYeoZIXMXnlunqHaS+toae7k7Kq+uwS7Pd
      lDCRxhrBmrkGcIlaidwr0XpJJVduuoz9yuO8rs2Os7OfEncJvZEeStwleWZQ3cgq2LqhkUjF
      rYnwpRvvshRnKMxZZmgakd//Hkdj46zHvhIQDofx+/2MDvUjuQM4UBlLaFSWzS2u2qy8kpuc
      FiCjprAbAnanA7szqwP4/bOXKp0PT8cMuLGX+JmOXZZ7bnOFUFWVoqKi7KpUEkS75V00Xv8W
      yg4cIdY3TNGGVRz73NcZuf8Jqv7q3Tg8nsJWgOHBIbpPd9PR3k7AAwf2HgBPgPb2jmmP13Py
      eeba+G05FAkjHGb45z/j3nUpDmS6CAVkegI6P79AZein91A9oo/foMh9rb9m3+k93Nfya6Lj
      AzyqRumL9FpZqPsivXPOIxF7/HE8W7eS7uvDOENey1cC9LTC/oNHgBQDwzF6u05ysquX2PAA
      87kzs5qiOfgjkQg+twd1LHJO+z0TTKuQbugYzFxcI9eqOHm/JEk4i7yUXbqJJbdcSyYSY/T+
      J9BjCcKPbc+mfS+kM2WVVdhFAST7eJG8JN4iH3ZpIoe7mdLOrCgOIOrjFNpxjk8qnUJAQNLh
      mu1hDl5ZT3Lc+GOaThU7iH/+bi7dn6A8KjCWCGHel4GBoU/cpHkdc9tUqoscvqzFYpzQdaz/
      CB/+5bv4j6e/avUxHY0Sf247rmuuxr50KYkjR/PuIbf9fP/OR3uTDCfanVQGiwENu92J3W7P
      8u/t9rwieYVCFEW0E32W7F1VVUVxZTmBaWJvDcNATSp5v8fk/WOdPYyd6rFk+kJgilaGYeBw
      OPD7/XkBNZPLL00ugmfCDPZxlgQoueVaJK+b0luunT457nToP91JMplkWX1dQUXyRFHEo8K7
      X3Tg97Zi1yAtgSAKVCQk1rXIJDc2Iy9bBgdeAMgrglFW3cD/bDJ4006ZoPcUp+qzAzvoKUcQ
      J27QJbvytr90411W8D1MkMlOhNqJp2Ic7N9v9TP0+wfwvfGN2BwOXBvWo+zbj2fD+rz7fiWR
      4dJKjGQySe9AHLuYnLFIXqEQBIHKS9ZbcvyZxBhN09jx3n9g7Vc+SnBFw5T9uq7T8ulsFu/G
      T7yT6q0bpxwzHcxJnFutErLhmZIkEY9P1BIwDCOPlToZmUwGLZ2m5G03UXzrDVRcsr7wKpGV
      S+qpHM+M5S+evUieAMQd8N9bVD5jS/PBXQ6GPAar9z1LpzvJ7ioNqhVW57QZTUxk9B1JjBCo
      que7W1r5e4fI5ntbCS2RMOQetKSD0rhASEhMawadjh+U63EGSA8MkDp5iuI7bgfA0dRE+De/
      LeRRvGxhd3rZuNEcWBMpD+dbQjA3RHI2SJLEpm99FmfJ9PqAKIqs/7e/BsBfV12wTjDT9XP7
      ZpZwmuntb0JLpdj/ibsI7TjAVXt/ZeURWlAukCGAtGUT34v8npKYgXDZlRzqa+HIwCirmKBM
      CII4yXIkcaT/IIYAJ1eVMhBcRemfdtF8QmF9QmZN/BLCvYNosdiM3t+0lub40FGayldaDjTz
      M/yLX1J8xzutYwWbDcHhRIvFkLyLtcnmCkEQ8JbPTIkQBGFa0elsIcsyJSUl0xbrm4zhvYcJ
      PbePjff8s+XEgwWaAJOhoTPkxfIHmBDG1VUBgcC4/A4QcAbyTKdJSWPP8gyx2grWX3wzv9v9
      fRrHllB217/xX5XH6SzW+Not/8m+03s43N/KezZ/iF/t/ynPdjzF5Q1X0xDM+hBG4kMohw8j
      uFxZ8SsHrvXrUFoP4tm6hUXMDDMrw2Sx5KXE2Fi2sul04qKaSHLy5w/irK/i8j2/wO3xWNat
      oZZj5yc14kzQckyapnUHyNsGUMeJcqqm8nTHE+zq2sEvo88hfvz9bD2uc9tugegjf+TJJ37E
      nlM7ePbEU4wlspXQx5KjXNN0Pe+9+MPcefU/EP7Vrzm2rY6dp7bnXcOxejXKiy8u5O2+KjB2
      ops/rr+NsZPd5+R8ZpTWTAr0bBAEgeLi4ml9EZlMhujpftq//hPcVWW43LkBWQJF9dXnZwUo
      BLnOq8mOLC1Hhp/wKuvobic/vSiNT4FVXjcX7pV4fciBc6lG+zi3SLY50HSdtJYi9fSzDDeW
      8a193wGwSHWJdIJgfR2ZoWGLth1RwgxE+mkqX5GXzU4SpZckHiE3a95LCXdVGU1//27cleem
      H+l0mqev/wgNH387y2/7s3mdY7qVSNd1XvzM/wPg2hd/aWWjyG3jLva/fCaAnmPS0ieZySYC
      6fNvNJQYxcAg7AR14wruG1TwqAbvefgxljhV9i2DRCrBY8ce5r6dP+YDux0Ev/B5eDzr+U2m
      k/zjQ59iKD7Ip6/9Ah3JNp78+cf53Du/yVf++H8Yjg/xkW1/RftwG0+0/ZFrm/+MNZXrCopH
      GI2PsP3EM1zakI2mu2f391lduW5eRUGG40N85RcfIy3Bl9/2ny/JJDDlbIfbxcoPvbXgNnBm
      R5gkSTR8/O0ENxde1MI8t6ZpVp1is5Sr6RhTonEykTh1d9w0ZfDn4mUzAc6EiRVgtrJNBnEH
      DN5+HZ4XWvnIznbsnn48jmf44IiTx5rT3JYj9GX0DH3RXgzDoHusk2P+JKu6BRKp+MQZNY1E
      bzdr+ySK+w7gTZ3iI70O0rYhYt4neMjeQdxh5MUjGLrOL3Z8j9aOF4i07KNZK6Hq4B5erGkp
      eALoioLS0kr66FFSbW3cqMg83ZieveECIJVUOPrNn9P8l2/HWXRuVz1Jkub15o8PjvDi332N
      S374Jex2O30791O1ZSPSeJmlEz95AP/GFZRvWX/GCfiKmADzwb56gWOyyuryRlZWrOF3rb9B
      E/PNpG7ZgyiIaIbG0pIGKt72dyx5ZD/at37K32cqGIvbqOjchaYMcUwWiC/14972Vr7x4n9w
      SckGViZClPzxCSo06PlDFw77OClMELgo2sWSjB1ndZzmba+jozjDW1tixJ56Gu/VV03pr6Hr
      pDs7Se7bj3rsGIamI69cgefyywjccTuyMsomFk4EMm3p0w4WUcBRFUSQ5qYyLqSS7CwJsOpz
      H7QKeldt2WjRJwzDYPkH3oTDNfOb38SrdgLYJTu6CKLsQJKdaGI21FLKoWRLgojb7iaqRnHb
      3axYvgo+PsEurR53RB04+hB7XryHd1x4BQ1Nm/hu00+A7Mr0WHnWf3HZpIi0kf6D/OnQ77h5
      zZvwV67lHVyGcZPGyHe/x5G2HRzcWMIdjW8m1XoIpaWVzMgwcn09zg0bKPqz1yGO1801LRsL
      LfZk1JSVwGoyZIeD5nfd/LKx+gDY7La83EOmEhwdGOa5mz7GkttvZM3fvmdhJkAyNMDhrsEZ
      i+Sda+Qm08qtOp97a5Nvs8ZfS0vvPmr8tWiGGVGm4crJSOeyu/E5AygZBQOsqjZfuvEufvjC
      d2jp3c+nrvn8jP06U5XK1ZVraQ6uzDPNCZJE5G3XceTrn6Vpn8hgY4jAhZsJ3PFObMGp9brm
      grP9TWwO+Yxe55fT4IeshWektY3yjauy8cqdPbhMX8QcujqvCTA2GmXl+nVWkbx0Om3xxwEk
      I8epZUi47G6S6QSyKCOLWeuMy+7CTnbbI3uxGTlB8YYNt91DIh3HITpwSuODXnIiGNnJYJPs
      VnsAOzJe2UssFcOOzEi8E4CBSD8ry1dZ1xyL5+QgjY/x6Sv/kWQ6gZpS6QlnTXu9oR5aevcT
      U6O0DRzlyMBBlIxCa89+Lqu7CkmSJu71DNupVMqiKpjfV3qqSd98DceAiy54L4YOKUDLfX7j
      x2uahizLZ7yWyQfK/U3mg9kcSS83iKKIrzGbBibc2cMTF72TJbffyMXf+CzXPv+TvERcZ4Qx
      D2SSYWP//hbjdP+wYRiGEYlEphyz4+RzxvMn/mQYhmEcHzxmPHLkD0YqoxojsWHjDwd/Z4zE
      ho1URjUeOfIH4/jgMavNjpPPWW0ePvTAnNvkXuf3LffO2mZyn2e7/lyQTqfndPx82pvPfvJv
      MlcoijKvdi8HJGNxY8fH/sk4+cBThq7rc2q7ICWSTLwSyGSv9PZzLZE0E3LLIL0Soeu6ZQJN
      qSryeIjkbFiMA1zEqwKmDyCVVHj+tjtJDIcKa7fA/VrEIs4rZJeTi7//RdzBmcv45sKmqmpe
      Hpj5IJFITPu96ambLxbbz95+pmc/F5iK+ksBowBv8VwgiiLeysItajaHw3FOZL/p5NBXwgB6
      NbQ/VzrAfGGMJ8cSBAGHwzHrYDZzDpnb5iS22WxWehNFUXA6nXnOLTMDhFnF8mzqAphYUEdY
      oWkwFtsvTPuFhjHOx0mn0yST2bxOmqZht9utSEHIf7urqko8Hp/2fGaeIYvPoyhW6SRz0Os5
      dBhBEKxJU2jwzmQs6AQ429m52P7lZZc3DANd1y0fRDwen1LAQ1VVazUxcwaZ5ZESiURBK02u
      YdJMzQLkDX7zOLPqTCaTsVaFuVjezvkrZqj/NM8/8wTD8Qzp2DC797XQ1lF4CctYeJQjB/fS
      cizbZu+uHXSe7i+8A5koO3bu5cDBIwC0HWll9669pAs09g52n6T18GGOj/Pd53p9LTHCnn0H
      aTl8bF7XB2jZt4cX9mRTC57uaOPwsWPElIUnwpmihlkqKTfe1ixgZ9YPTiQSs1avMQzDOtas
      RL9Q/VYUhUQiQSQSIRqNTpksM+GcT4CyyiUEq2oJemxERsZYvnY9olG4ku31l2CXi1jTnPXy
      BYNBBgcHZ2k1AcOQEAUdwaRP2F0sr/QTKXD82OwS6VQKUbLP6/qCzYFdEkiML/NzvT6AwyFb
      cnFxMIigKQyPLGw6Ek3TCIfDjI2NWUWvc/8Ph8OWFzqZTOa9mWdDJpM5a0PLXJBOp4lGoyST
      yVkn6TmfAKnoCP6yGjJqAmdpOV2HW3B4Zk+eZMHQcLg8SAJEo2HSaQ232z17O7O5oeNwupAd
      MtFoFIcNusIpigsVEUUbLqcTu02c1/VF2Ylblqiurpnf9QGvt4iqqqqc1IAiHvfsiWXPBqZ4
      Y77xc7+fb7TWSwkzk3QkEjnjyrOgnuBFLDzO1bNfSBHlpYZZwX46vLzNDItYxFnCZrOd0UL0
      qo0HWMQiRFG0coXOeMx57M8iFnFecaZYYBOvyRXguT8+QNRVhj/aTo9jBWsq3TStXsWJo4cp
      ra4jGPDNfpJFvOxRiD/gtbkCSC5sQhqbzYaRSdB/dDc//fGPSbiCPP/srpe6d4s4RyiERvKa
      XAH8xcX4HTr2oiZKw0nI+FlaUc5Q51G0ucTTLeJlDZNzlBvtdl7KpL7cse6ii6ztleOfSjRE
      y6EjrF277qXp1CLOORRFsegSgBX0L0kSsixnJ8aiH+CVjUU/wPxgcobOyQrwUnHJF3Hunr3p
      CX6tIJVKkUqlEBRFOesV4LWGdDpt0X2NnGRSucEd5rJrshTNmAuzoo5JNJsPTNbjXAe/ybE3
      szufT5xtbMRCwQa8ooOhzxcMwyAej+NwOPCMp9gGLJ46YOWnNOVOc6LkBh2Z9N2z4deY15wL
      R8kst3QuAqByJ30hMMWrQCDwsotxEAF+8/R/8sXffJFD07Ae9x/bThy4b9d9hZ0xfor7Du2f
      dtfDO+/hW0/9atZT7Dq2fV6F3RYSyWQyT0wwizSbZDFFUazAEJP5aLPZsNvteW96m81mDeD5
      vhHtdvucBj9kV42Z+DBzQTqdnjGgZTLMZ6OqajZVeTRKKBSalaF5PiEoimL8028/x7Ubb2Zd
      3Sq+98fv4ClZSa1XoHOgn7aTT1K24lYcY4dRNI2brvwbntvxHfpVB3dsvhhn+ZXsP3Q/1R47
      D7Tu5BPXvpP7O3oJSGkChHj21Ck+c9sXifU8we+6DT6weRutbY9yX8su3n7tJ+jq3oUzrVBZ
      U8mvdj1HRWkDhw78jOb1t3PndXe81M/Hgvk2j8WyRcBdLheqquJyuVAUhUwmg9/vtzjwHo/H
      EnMmO2RyVw2Txz5XOJ3OOU+Cs4GiKCSTSZxO56wTyVwtzZiC3Ps1DANZlgkEArO2N8W8hRTX
      8tYjJRmmtno9fcPt9Ayc4F3X/wWbl17KR1/3PnyBej513ds50v4UBLexDNVGSAAAIABJREFU
      JljKWKyfSEqne6QbRRe5sKKUlv4+vv/Al1necAU7TrSyuaaKtqEhIvEQS4J1eJ1e/nTyOP92
      +508tvshekI99I90MxYf4nVb/5x0vIeNy6/ioy+jwQ9YYX7mYI7H44iimC0I6PHgcDgsnryq
      qoRCIcLhMJFIZIpymSsGOByOea0Epqh1PqAoCoqi4Pf7Zx38iqIwODhILBbLK3yRq/cU4qE1
      YwjM53kugv+ngwgQcNh5+vDT9IRH2XdiF05ngJqKlZQ6ZTatWMt/PfhDaoprEGUflVUbUPqe
      4dGj+6mpWMlvnvgaoiNI//AJ2kZHKfWW8oU7/i/Hjj/J5vpVHBwcpMTpYPWqm+k49HPuevgH
      XLG0iU/9/G6u33wTkVAHB4aGCHjKCDhkaktr2dLQzDcf/emC3PB8kEqlSCQSaJqGx+PB6XQS
      CATweDxWPhqTcivLMn6/n6KiInw+H0VFRXkD3uTcmzADyecKMxHU+YBZgPpM8rspHkYikTPW
      7JJledb7FQTBeoZutxuHw7Fgq50wGBo02gfnnk9yb9tO1jVvYX6hyLPD5/KxpnbNAp19bkgk
      EiQSCQRBwOfzWUuy+XbTdZ1EIoHb7SYajeL3+0mns1QL860nyzLpTIbHjx+jqTRIU0WlNUDM
      CKZCIAgCkiThdrvPKutcoTBjfH2+fH7UZEXYDJE0daXp8P/be+/wuO7zzvdzzvTeMMCgEiQI
      AiDELlFUs2RJlmUpcpdbvLGT2OvdOE7Zzb1x9qHvo8319fPs9eZ67Y3s2HESx5ZlyUWyJKtb
      zRIpkWIvIECAIAACGEwBpveZc+4fg9/RoJEgCUq0ze/zkCAHM2dO+ZW3fN/vK3Y7nU6ndaA3
      GAzkcjktOVWLXC6H0Wi8pNEjvdPi5Lp11533By/kM7+tEAkik8lEJpOZ8+CESSCcPbG6FYtF
      CoUCpVIJi8VCuVwmWyywf2oCgLX1DUum588G0UH97Rj8UB3Y8xNtqqqSTqe1aJgokD9XZEuY
      MwK5XA6TyaQFFLxe7xx7XywgYpe9FJiN3+U4MFotIj9y8tf88sju6m/zYV4eOn7Og6TSIXad
      3EdFhdGpExybPH1JTvadghh0sixTLpe1ellAU0moNYUURdFMFFmWKRQKpNNpnBYrX9p+A7d3
      ds0xJ0Sbn+Xg7TR9RLh2/gosVvpSqUQ2myUej2M2n7tkc74vpCgKuVxOMwtrNYAURSEWixGL
      xYjH45rsykpDyufz6tDQE/xfr7zBA3/8f3L3//txvnTP32Aol3DY3OhtTRizQ+wJpbmh0c0z
      J/v50l1fwq5/6yH8as9DFDKTZDxbUGfG6RvZy9985n/jvwyZRupsV0IxqJczmMSDUxSFVCo1
      p27WarVisVhQVVUzk8xmM8lkck64T0wGm822YKsXx0un0+cMERoMBhRFweU6jzrrJa5JUZSz
      7iQiGjM/5zAzM0OpVMJqtWr5jpVwyC0Wi6YzNP94wvwE5iQWF0Mmk8Fa0xHybJABnjlxmDta
      Lfx6PM37ttzFh9b38vjxY9zY4mf3SB9PHjvI5258P3lFpl6O8uroGBPBQ9z/8s8A2NiyljdD
      Se7uuYEmB/hbt1N3GQ5+qHJnhNrB9PQ08Xhc06upvekicVQsFrXVXa/Xa46uGLQi3AfVhyTe
      b7fbtfeKwgwxyOcrJEiSdFbbuRbi2BeKUqnEzMwMU1NTTE5OnlWtQZIk7Ha7NtDnF8tD1dRb
      qWiUyKEsdjxVVUkkEiQSCWKx2BxzSzwn4W/VJiprIZKQtdBDiXihyLae23mj/1nEZrdp9ZbZ
      fxswViL840s/pRw7TCKbINCt0ty4mS82bgbg//7539PYuJXjp17ma888yM091xLJQ/2lFTK4
      IAhpPZg7yKH6ML1e75zkjQh9qqqK1WrVGl9ANRYvTJJCoaCZNYVCAaPRqK2wFosFvV5POp1e
      clUSu8JyMsQXkk0VO9/ExIT2WrFYJBQK4XQ6sVqtc+xv4cQLSJJEOBzGYrFgNpu1XdRoNC46
      icSEX855ifefD2ZmZjTzzGazkU6nNXPU6/UuMNuErtF8f0bK5/Pq7xMVYmZmRnt483k8hUJB
      s2UX24KhOlCdTqe2muv1emw2m7YCCQqu3W4nm81qAyafz2s2r8FgwGazzXlIhUKBVCq16OAW
      ZtXFREQURWFyclKLWLlcLrLZrKa/KcsyTqcTs9msObjCJBMrq1g4hDKczWbTdq4L2QVqNT9X
      0q8RYdRavySdTpNOp/F6vXNM0MvUULl0kCSJeLlKVHPrDXPi8vNj9LUQu0CxWGR6elp7YCJH
      AGjkOCHuWruaC9tdiDWJ1UissiJRtNgEWE729VwQtrqISIl7IXwT4d+ICZFIJMjn83OOUSto
      KybNYnKFyx3MK60MXXvceDyO0+nUQq92u32OKK/AgiiQBiXP2MzZFdHCM2PkFdh1/OVzcneU
      SoG9J19jNBY93+tZUeh0Op45PcQzp4c0Ps5SJoVYoQwGA3a7HZPJpL1Wu+qJgVS7msmyPGcV
      0ul02oAym83ahKo9r/nnIcsyZrN5gcOXy+UoFArnFH2qRTQa1XwXi8UyZwCbzWbq6uqwWq1M
      T0+TSqW0nWyx6xXXPD93sZiw1lIQE+dSRLTEoE8mk1p4dmZmBli4s+t27tx538DJX/H3zz/B
      +7fdwTNv/JBfHnwFsxLhL3/8P7hqVS8PvPg9JEuAYPQkuwb2QjHCD/a+xCu77+fXwQTd9QHa
      nG6+/fQ3MZi9PPzK90nhoKMuoH1RIjHG8fAE33/ph7x/63tX/KKXi2w2S6PVxlq3F1mW+HH/
      cRRJotFqo1wua5VCtWQ1sToL5eLFHlrta6qqYjabyeVymoS3MCfEILHZbHNsbjFBao/jcrm0
      86lFLJPhhVOD1FksGBdJIM1HoVAgHo9r7wsEAhQKBe37RHGISHqdj+2+2P+Xa//XYqUmgl6v
      x+VyYbPZUBQFp9Opha8rlcoC6sncKNCpYfqmJtjsUcDZxXu23stal5WOlo08+eYjvLDvEbZ2
      38ovDrzEn9/6STa3b+eLd3ye3QO7ef71H3D11X9Cp9tGU8N6njvwGFBlmh4KTuD2rCE48SZ+
      z6oVudCLgVOnx6mbHZjFIv3TUe2mCFtX2L2SJKEoyjmjHbXxa7vdjtls1pxkqGr4u1wudDod
      er1+gbamcChr/7/UzhTOpDkQmiReKp0zIlQoFIhEItqgtFqtJJNJzRwShSHJZHLZsfbana52
      96v9fe09WWoXqX2/CMteqD8hUJuXEeREALvdjs22sMv9giiQw+rEpAdF76R/4HGeNk/z6pkw
      ZqMBp6edtR4PLn2Jrz/7A97TWM+3nvonGvXQ1baBf3j267y7o4vnT/ZjMlRt1ntv+SIAw6Ov
      M5FTSBaX17vpUqHWkXttchy9LGM3GkGSkGYHoHigi2UhhSNaLpcplUoLVi6r1aqZPcJkgurO
      I8sybrd7yYZ0VqtVS7CdLTDRE2jkrx1O3PMe6Hz7u1AokEgkKJVKmtnlcDg0sd/a5NNyKcq1
      3yHuk3htuQP3XAuJOPZSEOdsMBgYTSbwmsyYZjlV832lWtZtIpHA45nbOun3MgpUKBTQ6XS8
      MnmGg6EpVFS21DfSPxPhkz0bORoJsbW+ARNzH6qIxoj+vAK1K7Xf71/w8FRVJRKJaAmlsxG7
      CoUCuVwOq9V6wU0fBFKplMbRKc3uFl6vl3A4jCRJ5PN5/H4/8Xj83AebRS2tuRYrzUw9G5nO
      4/FQLBaJZzJ8a9/rbGto4r1r1y26wgvkcjlSqRRut/tKFEiYF3ev62FToIlQKsVvzoyQK5c5
      GAqyPzRJu9NFo9kyZ2UTXP/5277IBSyVWa41pfL5PBaLhWw2u+gDM5lMy85QL4baFVo42vl8
      HqvVqk1ct9ut1Tckk+cnuy5MjNp7UjtYV3IiiAVHXEs+n9ekDkulEmadjk/1bqLB4TzroqKq
      6pzduBZLZlQmwiOXXVXWSsDlcpGR4HtHD/LKyDAd/no6/X5SxSIWvZ7h+Ax6ScZvsS7QlBEQ
      Nut8u7dYLC5ZLSVWzlKpRCwWO2u3lAslf+Xz+TlJKUHNbmlp0XhKwvEOh8NkMpk50Zja75xv
      49divq1+Nvt+MUiyTKhYoFRz2PnfIUkSbrcbl8ulObU+nw+DwUA+n2c6nWI0laAr0Eid03nW
      +yUWvNrrF9ADBMde5JM/fZgX/+a7jAX7yGAlEx/DW9fMm4N7aG/Zgn/eavXdX/0dQaWLNsMU
      w/Fpejrv5mTfz5jKVfjvf/SPBCyX5+bSNxXkmcF+Evk8p2IzKIqCzWhilcvFxvoAfdEw8UKB
      UCZNwGRekA2dbxLNv/HpdFrjz4ubLcsyBoOBcrk8h4uUz+dXtB67NtIBc0OrsixjNBopl8uE
      QiEtMy2qruYnBmsLbsTPpUQAYCHRbSlIkkQZ+PnJPrY1NHF9Q+MCu19VVRwOx5x7U65U6J8K
      0mC30x8O8cLoMPlyhbtyedrcbtp8dWfNkCuKQjSVwmm1YDa8ZQLpdu7ced9j+5/hrnVriehb
      +J8P/hkGezuj44fobF7NQ7t/yrMnDnLnhhs5NLQLg6We8MRuEuZGMvEMHkOW4cg4HW1dZCt+
      PrulmyMpE10+77JuyNuNR/uOMZFK0uHx8smNW7CazRgNBjYHmmj1eGm02Tk8FSRRLNLl8cG8
      AV/7c/7rgOZQCpajiPik0+kFK6RIlF2MySMgji9CuWIw1JZw6vV6MpkM6XSaUqmEy+XSaBu1
      11HLbp1feZbNZimVSpopJ7rZ1753qWo1adZRlRSFVqeLNU438iLvM5lMWnRL0FFi6TT/fGAv
      +VKJRLHAmVnTbXBmmv5ohGQuSyafx2Uyo6vxU0aiEfpDQaYSCR44epA1vjq8lrfMJT3A0dF9
      nHa1YI0rvGv9rTx35DlubGrhxNCLWNzdmGZG55zgZDLG0YHX2D0S56ZWD3dtex+HJseITB3n
      Fwk9H7zzPRfyDN8W1NtsXNfUQndDYM7AE6t1o9vD5oYAb0yMM5HP0m5zzMnoirh5LTVAJJdE
      oksMvmw2q+0gS4X/RD+r+QUn5wtRnyzajtrtdi37K2jLtWrJdrtdi48Dc8LA4mftDifLMuFw
      mECgmtsRySWRp6hN7J1t8ItwcoPJXL3+dFpL+IlzKBQKzMzMMJCIcTQS4g86u5mcHfB90QjZ
      Ugkk2OgP0O528+TQALvOVHvKrQtO4rNYkSSwGozsHh8jWyqhkyUqqoo8T/pSyufTaiiVpK2u
      kbHoGLlsFJ21EQslGjz1HBzpp9Hjp8XbPO+SioxFZ6i3mdg3OsD2ddeSTJxhKlfhqqbVF/Uw
      LyVyhQLmRZJLtYgkEvzo8AFSxQKfWr+BdLFAwGyF2UExn48jir6FcyagqqrWoKE2swpvmVOC
      LHex6m6ipWgikdCOGwwGtdxDIpHQyhoTiYSW+BLZ4Lq6uc2lK5WKxk0SJpIwo+YjkUhgMBgw
      ms1MZNO02BwoqkpBqUClglSuaFQEETAQ96pSqWA0GrVKulqf5FQ6xdFoCKOu6pu9f203w/EZ
      DoWnkCWJ/7ztWpo9Xg6Pn+GJwX7ylTKKUjP5Zh+x02jins5uFFVlfVMTRv1bfsDvXRh0OVBV
      lcHQFIPTUXKlEofCQf50/Sbk2Z2glvMj3i/yBrUErPk9bQUMBoPWENpsNmvyhhdb+ifOo1wu
      Mz09TTAYpL6+XqNpC6o2VIMBtTZ3NptFkPhEwzyPx0O5XK7a7TVZ8sWgKApjmTS/GDzBvV3r
      2RucZCwZx2u2cE/HOsrlMlZF1SZSqVTSSjuFPyR2EkmSUCSJx4YHqbfZOBoO4bVYuKl1FclC
      gSPhEDe1tbOhuQX9bHllIpPhRCTEYydPIEsSrQ4Xk+kUTXYHfquND121cdHah4uaANPxMcxm
      H5FshnZv/QUd43KFGEwz6TQT8RgNRpOWrZxfwSVWNEG5tVqtGkNUrHjzQ6aiYF7UAxuNxovi
      +QtkMhktEiWqqoQWkXDOC4UCkt2GSQV7TUmnCJcWi0Ut5LhcKIpCRVV5IzzF6USMDreHkUSc
      aDaL02TCpNPxh91XadcvztFisWgLiqCLGwwGCrLEvxw9iKKCispGfwNHwiE8Fgsf67mK1TUl
      pQIzqRT/uHcXvXX1bAk08/jJPj7QtZ5Wr2/JqrsFUaDgzARmuYLZ3kzf8Ou0+ju47+f/nb+6
      57/h0FfIK3oqhSiSuYGTxx+mff1nmE7PoC/HiRYlNrd0zvmCbz36FQbCQT73vr/m0Td+Sjiv
      8ImrNvJi/2tEWMV3PvVfzuPxvn0Qg7rO6cQyS6zS6XQUJRhKJkiXilxTH9DMIrF6ud3uOWaS
      0WjUzCJJkshms+h0Oi0XIMkyrwcnWOv1sW6JQo7zgc1m03SKRE2DcMSFM270uPm3Y4fo8fn5
      5KatGj1aZKENBgMGgwGfz0cikdAq3RbT56kAkoQmtyhLEMvlGFAU2pwuEoU8N7a0UWexzsmH
      iFCqFliQZWISOE1Gnh4ZplipUFHUqhmjwpFICIBYPkd+EVYngNtm40vbb8BqMmE0GPii16vt
      KEtBD/Bc/3H+203Xs2dqhgOHf0m7KUvF3sWD+17gL97zWe3NX3ngv/Cle7/Bm0ee4qlTI3x+
      4zooRNgzNsKMboIf7nqKb//XXyKnRpjKVdjY3MF/ePef8PUnv0drQxftdj0zJR23bL2XWGKK
      dZv+6EKf89sCVVVJ53IUim/F6w+EQ+wJjmMzGNjsr8fA3J1A2NQGg2FO3YHYDURMW5g/iWxG
      K5SvVYo4X9RqjQqn3WQy0dDQoNGBp8JhwrksZqDb56fTWzcn2ZRTFPZPTdLp8dLd1EyxWNSc
      ZEHxliQJk9nMZCZNndXKE0MnCWUztLvcpIsFpnM5NjUEmM5lseoNuE1m/BYbvtnvKBaLpNPp
      OSWdkiQRKxb4af9x3GYzVoOBYHqWaSpMehUcJhPrfX5W++b6KwKyLOOp2bWWI6g1Lwr0FKno
      MMF8iFvedTdbG/bz0sARGmx2FFS29dzOFp/Mv0QL1M3LvL0+fIQuXx35Crz1mwp/+6Mv84F3
      /UeCwcMEmq9DCT5JuZzmeKLCh7wXV9d6qZHMZrh/7+uUlAofWbeekUScFoeTdtdV1Jst6FU0
      R2s+FVoMyFQqhV6v1yIw8ws1XNa3Vq2L0c2Mx+Ok02lNoMtqtRIIBLSqt1wux7RS4RfDJ9FJ
      Mu9ds5aJVIKhwwcIplO0u9xkSiUGpqPIQKPNjsvlIlcuI6kqhVyOE9k0TWYLXlnmZwN9mPV6
      6qxWLHo94UyaWCHPtoYmenx1NNodjCZibGtoRK8oZDIZbXK7XC4qwJl0imy5hE6SWGN34jCZ
      iBfybA00MZ3LUVYUKoqC32pltdvDrWs6cc0uHiuFBVGgSjFJtiLRWr+GY6f30bv6WoqZIDNl
      HXa9RLO3mWOn38RobcBnArPZx3Q+TzkTpIiR9sZ1mLXzK7Lr+G5KwPq2TZyaOEZTQw8NZpl4
      WU/AcXn34ookEnxzz2uUKgpX+Rs4Fg1xXVMrO+oD2mq7VNZWvCZWY1mW8Xg8KyLzJ5w+JNDL
      OmyzjnQskUBvMuGcjSoJ59dgMDASiZAvFdkzOc5wfIayoqCoKipg0RvwmM1MplPIksRat5c7
      2jswmYx8Z98e7EYj7S43RyNhrg404bNYeGywX0uRdPnq2NrQiAS0zj7TXKXMtw++icdkwWow
      8OF1Peh5KzDwemiS3RNnMMg6mh0Obmtbw8MDx8iVymzw13MkHEJRqybQjS2ruKun95LoA12J
      Ap0FiqIQisf50ZGD5ColLHoDH1jbhUunX3IC1Dq9tUxJm8120bF+gVg6xbfe2EVFVWiw2Wl3
      eVjlcHI6EedgOMj1zW1YjUa2t7VrE/A7e6tSN3pZx5lU1dZ3GE2UFQW3ycTHOnsYSSV4PThB
      opBHQiJgtxPP51GBslLhD9dvxCrreHDgOOFMhoDdTre3jiOREDpJ4k82bmUmn+NIJMT2QDP9
      M1Em0ymOR8O4jCZual1Fl6vKxpzK53jkZB9bGhq5taOTUCLJr4b62RZoJpLLsGdyXDN/7u7s
      4qaOzov2jxbD5clXuEwgyzIBj4frWlr51dAApYrC40MDfLxrPcZFHsZ8xw7ecqZXUuDVYjTR
      7nJzOhFjncfH65NnAOj01SFJMDATRZYk1jndZLNZ6uvr+UB3VWVvOptlov8YRllHrlTitvYO
      1ni9VPIF1jhcdLg8pPJ5BpJx+qYjGHU6tje2cCwSolwqsy8RITJbApoplXCZTLS7PByNTDEw
      E+WJoQEAOtxejkVCZEoltjY0EsnO5Ug1WW18YfM1eJ1OTEYjarnCx3s28N1Db5IvV6qDX4I2
      p4ttza2XZPDD7AT4h59/mZRq5t6b/4ze+gsPZ/YPv8pP9v2a9pZr6DBneOz4fj73vr+lp863
      Yif8dkOSJHrqA0yl04wm4kRyGQbjMXrdVarHYpVQ87ktyxGVPR+YjUY+vmkLuUIRp9XK1S1t
      6CWJfC6Hw1PHRk+dlmeQpKrkSjCZBAm2tbTR5nLhMFvIFou4Z6NGY9FpdDoddXV16CoVtvr8
      5Ctl9k9N8vTwIBVVYboYYI3bQ65SpsPt4alTgzw1PMinezfR7nLRZHPQ7vLQaHfgNZm5bdUa
      Huw7SryQ5/b2Dtw6PeVyWVsMDGguFBaLhZ/3HydXKr/1ogprPT6syxDdulDoAc5Mn8Ht7cSQ
      HeT+1/vIRt6k3aRnXzJFj6+OE5On2Nr7EXbvvZ9s2cBnb/sMD77+Kzpbr+Gvbv+EdrDutg3I
      bzxBUVHZPXaar3/ir/mfz/2Knrs/c8ku4O2Az+HgIxs3cyoS5geH9rN74gztNgcUi1p82WQy
      aQ5wbdrfaDSu6OAXMBtNmI1V09XjcDA9Pa0xQe3zvi+bzXI4FAQJen1+9IpKPBbD5XKRzmZ4
      bWyUJrOFRpuddDqNw+EgmUyyPdBMh9vLC6PDqKpKsligfybKUGya1S43n+7uJVEuMxSbYf/U
      JPd295ItFXntzChjyTjXNbXiNJkYjsUYTyb5wqatyMxtxyQiZel8jolUEp0ss7k+wP6pSdqc
      Lna0tK34vauFDNDcuJn77r2PdR43pXKBVD4D6Pmrj3yFSHyaL3/w/+D0xGHWtu3gY5u28psT
      b7BuzU3U26oz8/7H72MiUySaLfK3H/47hsb2US5miSRCGEy//c3zxMBu9/pocjhIl4ocnI5g
      neXTiCywx+OhoaEBv9+Py+XC7/df8nMTkSZR8zt/stlsNlRV5cPrevhwZ88cQd98Pk8mX9Ur
      nchltWRcLpfD4/FQ73bTYrNzbWMLPouVl0ZPMzATxaTTY5ZkTJJMi83OapcbSYJHTvbhMplx
      mk2MJRI83H+MsqJQZ7WyvalF05wSeQBFUTgwOcE/v/kG/37oAOlSkbUeL7eu6cBqMDCZTvGv
      h/YxGo1csvun27lz532hyFF+9uZT+JuuZWT4BQINvWxu7aHB18J6fwP//NJP+cxtn+fRl7+F
      zredL932Kfb1PYXf30t3Qyvbu27BadQxHjzMd19+iD+49g+5aXUHP9rzCp+/9dOY9Zdfb6gL
      gSzLtDldhFNVx67ebsdvqao0i0KTxXj156P9eb7I5/PMzMwgyzLZbFbbiQREfbPJaERX87ow
      RfSyzJbGJjo8PtTZVVnwfYQahl2SaHA6ORKeQkbihpY2rAYjnllWpd1gYI3HS75coW86QqFc
      1hJYRaVCoVKN7Hj0b/GI4uUSQ8kEr46PEs1lyZSKWPUG7l2/kXqXG5/JzHgyQaKQZ0ugCc9Z
      qr0uBucVBdo7tJfta7dfkhN5OyH4MufKEi712dORMD/rO8r7O7tx6PUYJXlOFriWYyMIYIKH
      IhJLer3+ouPZiqIQjUa1GgBBLzAYDNogVlVVo0MICXKDwaBpAAn4fD5NXU2gUCho1A+Px8Pj
      J6pCyTpZ4sDUJP9p09WYZhN/qqqCLDGVy/HrkVNEa6QeLQY9t7aups1UlXjR6/X8uP8YwXRa
      mygWg4HPbNzCqjo/sixTLBb5xu7fEMvn+Nj6jWxpbbski4hu586d9y1Xart5ASP0txOj0Qg/
      OrSfRqttQWH5cjAZj7F/apJQJsOLYyMkSkWy5TKHghPUWSxQI6GSKxb594P7KBSLHJua5ImB
      Pl4/M4qsKLS4PcsqAl8KuVyOdDqtJdkqlYpW+ijkTQqFAi6Xa06vslwup0k+1pZP1mavxWul
      Ugmj0YjVaqWnvoGe+gYabA5Wuzz4zJY5lXGyJNNWX8+2pmYKpRLBdAqDrOOj69bjUVT8fj9O
      pxO73U7AZkdRVILpFHVWK9c0tbClpW0OLXsiHmcqkyZVyLPOW4dpBeom5kMG+OoDX2QomV2y
      Ed5Dux4CMtz/7A/mvP4vT3yFl0dGlvVFLx9/+ZzvOXHqN3zl0W8C8K/P/A++/NBXSecTfO2h
      /8qh8PILty8lRqMRnhoawGe2MJFOoqgqxyNhnh0eYs/EON/bv4eDkxM8PXSSb+z+DbtGhxlN
      xhmKzXBgapJEocBMPkeqUGDX8Cl+evgA04sITC1HcdlisWgmT+17xSovyG2ANkHEbm+z2TQ9
      IIPBQDqd1qIzuVyOZDJJMpnUyiq1xtJ6PXVOJ73NLdoEEj6Sz+eravorKre0r+F9azq5o70D
      h6JqAQFRbOM2WzgxXVWneFdrO7d1ds1JdOl0Oj60/ipcJjNjyQQPHjl4SZrr6QGMVg9PvfEw
      OjXLU7u/zyvDA/Suu5M39n6bbevv5uHdD+FwBzhw4jk+cXI3P/zS9zBWkmQNjRzse5bMSI5X
      IzNMhEMoOgt/tn0HjxzfyzW9H+U3u/+Bm3Z8kfHJ/QyP7mYkY+TuTVt4dPcvuOn6v+TudV3a
      yQQaNuDU7YFKmHDJz6d6rbw0Ms729m7ihZWrUF5V5+eLO2684CaADjz0AAAYMklEQVQTRp2O
      u9Z2kykVyZaKvDx6muQsXyhVKPLEqQFkJEx6HXajiZta21nrq6Pe1osKzGQymHU6vn1gD4qq
      sqE+QN1skkxVVd44PczhcJBPb9qG4yzF3qJzjajqEiHPQqGAwWDQZNuhyhIVYlG1mkciIhOP
      xzV+kqqqmoy72WxmJBoFCVbXzVW8EIXqwkQSNOcfHdpPslDgC9u2k4zFMBqNpNNpxsbG6Oys
      kiXNRiMes4VcKcXzI0OUVIUd7WvQz04CSZJIFQrYDAYS+Ty58spIsM+HDCDpXbSZi5xJF+gP
      T/HlD32Z8aljdHfczJ/e+ifc0nsLd62/mq09d3Dnuk2UgKMnnmbv2BCvnTqAgoH/dM/fsmPt
      dWxuaubw+AA3XXUnZrJ0d9zMJ6++FYDJbJG/e/+f0z9+kqtXdTIyHaSYmeC+x+8HwGOf1WyR
      zGRz04QSYdzOBpzGle0SKBJTF7KdisnTGQjQ6vbgMpn5i+3Xs6OplR1NLThEQ2xVRSfJrPH4
      uLN7Pas81byBw2wmnEnz8Imj6CSZm1rb6WoIzP2SZZ5WLpcjGo3OqdkVBSYzMzNkMhmy2azW
      0EMo04lJIDhCQk+/UqkQmw2Put1ureTx4eOHefjY4QViXsL0EjKLUA0UWA0GYvkcu8+MaKWY
      Pp9Pa42kKAp6WdaoFKlCkaeHTjI5W6MNUCgWGYyGmUyl0MtyNYp0CagQup07d96n0+u4fcPN
      TCaSfPya2/juCz/i0+/+j7jNZpq9zaj5ECdiOdb6W2n2Bgh4m5mMJfj8HZ9nS50PnaOFFl8z
      ZllHszfAezbczFMHnqR3zQ20eeo03+GG1T18/9Un2NHRzalYim1rrqatro1buqqO9XN7f8zw
      9BTxip2NdSb6sjZua3bxwP5XGQkOcn3PDt7peJKI6qiqynMnT/D86SG2N7exuaWVLn8D1zS1
      UCgVyZSKJIsFhmMzJHNZXhkZ5qWRU3Q53Mzkc/TPTNNot/Ph9RsWKMI1u9xsaWzGPC+iMx9W
      qxW73U4mk9FEd4XkoZAIFO2UMpkMRqORXC6naQWJEk7R1lWWZa2WuVAoaI6zrKiscrlp8/rm
      OO6C2iy+Q+woozPTRHJZbmxtx+9waIU1Xq+XZD7PcydP0GC30+ZyczwSpjLLSzoeCbGxrp5Q
      KsmTA33snZxAQcWs13NP1/pLkhC7wgW6QKiqSiyTJpxO0+mvn7M6KYrC2Mw0zw+d5HQipvHa
      fWYLn+rqpVwoYDCbq6bKrFqcqI5aDIVSiddHT9PmctO+iPqBqP6qq6ubU/sr+pgJR7VYLGpR
      mHg8jtPtZm80RIvNQZvNrlG5RU2xqCY7l6Ne2/60XC7z0yMHORIO0Vvn5+ZVa7DPavYDnAqH
      eGKgjzvXdOK3O/jegb3EC3lQwWkyYdEbKCoVEoVqCWmb083HN2zCM3t+53omp6MRziTi7Fi1
      GtNy6dBXcP6QJAmv3YHXvjDRJ8sybV4fH+rupT8a5unhQcoVhWy5hCqh8ewVRaEMWr+t1tbW
      RQlz2UKeV0aGkST4o41bafdX6SqCduH1enE6nQvCumLQB4NBTZIlm81iMBhwuVxECnkGZ6ap
      M1m0hn6iA01dXd2SKhji2OlZLVG7xTJHUWLDrLzMsWgYo07Hba3tWjOL1XV+/ti0lWAwyKl8
      jng+r5l8Zr2e1W43WwNN6HU6Yvk8DoOBUk2tw9mgqionwiH2T02wsaFxWRNABnjt0CN87bH/
      j1hx8e4kuwZ2ASyIEr20/6ccC59dQl1gOVGg8eAR/p9ffJXj4SCoZb7z9LcplDP801P/wIuD
      R5f1PZcLEpkM9+97g2dmB78kQZPdSTiV0rKxtZEYIVGymL6Oy2rjk1dtwmmcu1NPp1I8duww
      06nUoj6N2AXK5bIWQRG9dw0GA69MjGHW62m3WDVVBp/Ph9/vX9LeVhSFWCpFNpfjgUP7eeDw
      fu3YYlIcj4QoKwoyEgdDQfaGguRmza2pqSmi0ShOp5Pdk7PdambHdjyf50g4xCMDfbw6NkKL
      08mTQyf55p5dnJgKzmm8vRhkWeb2zi6+tP0GXMsMb+t27tx53/3PfZs/evcfY5PLfO0XX+V4
      ZJpgZIhuv5sfvvoY//uZb+JwreGFvf/G88ff5PqN78EkKTyx/zFOhadwKyG+8eJPeO7Qszx5
      dBe9dTa+9stvoLO38fzuf+L4TJZcLspMtI/vv/o4bouBbz/9LXSONbS739IPimVT7Fh7FQ++
      8SyF2HGePnmCFkuGgvs69h97hFt6b1nWRV0OkCWJVC7HaLJKPZZliWypRLxUYktTM4bZ1VpM
      AGFPC7U2wSkSf7w2O1c3teC1O7SBPhyN8PzpIVa7PNQvQbVW1WofM1GyWJsga7I7WeerwzRb
      9G632+c07VgM8XSab+3ZRbFcZpXLTcDuoNXj1SRWfnDgTWL5HB/q6qXJ4WQwNs1oIo5J1hFM
      xHGYzViNVfnHJrebSCZDulSNoFkNBjKlEulikal0mj0T4yQKeUw6HaVKhedPDTKdSbH2LCJY
      ep0Oyzl8p1rodu7ced+21b386zPfYCIe4qqN/4HxM69RKBfYvmoNz50K0VHn409v/gSnZ0Js
      rXPhaNyOMr2Hr7/wFKOxSa5t9NG98XNkksP4dHA8OMiWnlsJRkeZiIf5izv+lKcPPc2ZRIyv
      fOTLTIQGaKjzc2Rkkh0tfu57/J+5vmcHqdhJvvPqM/zlHZ/iyw/+PelMiE1XfYix4efZNTrM
      J3Z8YLkBknccep2OJruD/ZPjlFQFleoWHy/k2NrQiLzEji7kQvL5vFaLK0Kc8ykVPpuNLQ2N
      tHi9Sw4IMYEikYimEC1glCT0kqyZCg6H45zEPVmSCKWS9EXDtLlcXLe6Q9sthHpEi8PF5tY2
      Wl1ugskE0WyW4fgMA9NRFGDrqnYiuSy5chlUlZl8jmKlQlGZXd0lsBoNFCsVFFWlrCiEshly
      pRLjqSR1Jgs+qxV5Gf7JuaDbuXPnff/26/9FGhsfvfHTPP7K/bh9PWzwmHlg34u0NKzHqUQY
      Tis4DTrqbU7q6rvpG3qdz/7B39FtKZE1uPB7OyhmwzhNNq7v3spje5+hs3UrDTY73c3dnIme
      Yb3Py/dffRyH2cCBsZO01vewYVUvt8xGdx574yckClnSipWvfnwnNp2Bm9ZdxYsnXue6njvY
      0rrugi7ynYIsSRydCpIqFpEliUKlgorKJn8DhiUe2PwCm2KxuGTLT1mWl1VKKRxf0QADqrb6
      odg0z4yeYpM/gG62aOdcuRG9TodDb+BwKEimVGJLY/OcnarF7dF2BFmW6fL58ZhMjKWSlJQK
      8XyOmUya186MsHdynDOpBMVKRaNEGHU6bm5bzSd6N9Ht9hIvFojlc8izx1eB45EwJ6MRwqkk
      R4OTJHJZml3uC5oEV6JAlxCKovDLo4fZMzmOxWDArNcTy+e4Y9UaOiwL+wXPJ9JB1U+4WNEs
      qEqli5ZGsVgMi8VCUoLxTJp1Zmu1T8Js5OdcqNr6WUBiMplgaDrK7Z1dmGqup9ZJtppM7Dp9
      itfGRkjMJgzdJjPxfJ4muwMVaHe50csyXouVa9tXazmNbKHAyUiYVpebWD7HkalJTkxHyQgR
      YAlaHS6+sP26OUVHgu9V2+lnMVyJAl1CyLLMtuYW9gbHyZVK5GYTSc+Pnsbd2Y07V9EkSGDh
      Nq7X61dEKwiYo0QtxHrNmQwbHC6SySS2WQkRASHcu1S9s8NazSoPnT7F/qkJrm9rnzMByuUy
      DxzaDxJ87uod3LhmLXaDkYdPHOWGlja2Nbawd+IMN65ajdtq1bLI6XSaTCaD0+msUjf0erat
      agfAr7rorG9gKhHnN6eHCWczTKSS1M3ukGLQ63Q6EtkMPz58kAa7nXt6erXaifk4LzLcFZw/
      LHoD5VKZyXSqWuRN1TTqqqujzlptRWqpCSPWQtAZLhYiwyvMK0VRMJlMWtdK4YyLRoCZTEYT
      +DqbeSVJEqvcHrYGmnDN0zQS/kDAVnWSdTodbouFRpuN7W3teOx2uuobsJnNlMtlrZONoGgI
      Ma9kMqndH/HHbjbTG2ik3mJl/9QEM7kcyWwWh17PQ0cPEUomORaaYnBmmsl0iqvq6nEtkWO5
      MvIvMUxGI3d2rydeyHM0XBV3UlB58tQgt69aQ4vJpLVMmk9qu5A6YiGDMl/TU6ywIt6fy+Xw
      er3orVamc1nW1Ndrk02I+i6HemAyGues/AKyLHPd6g7grVLRcqVCh8+vabMK1QphmonBL6QZ
      xYQqFotzqNu1/obLZCaRz/Pm1ARtLjdlVeG1M7NizkKy5iznv3ICK1ewJHQ6HWs8XmyC06RC
      vlKmrCocyySZVt5SOqv9abFYiCaTHJsYX1YHeVVVeWNkmG/s/g2PHjusfUaSJDweDyaTCaPR
      iM/nw+v1kslk2B8O8shQf1Vxmbc6Yq6EX1jr0wiTSOQNRP8yIcAr/tSu9FCdSOl0ekHPYvG7
      RlvVRJQAt8XCDa2zTRil6mvXNrZQfxYf6soEeBsgSRJXt65ie2OL9po8G9HYMznBK+Oj2iop
      SdXOKIKG8OrIKR46fpj4Ep1nFv2+mr8FBD1C9AoWq+rmuno+1n3VgsSReYV5Nzqdjk2BRjbV
      N2q5icUaV9dOgNrColQqtYAOrdPp+IOu9VgMBqwGI5IKJ6erihio1Xt8y5qOJe1/uBIFettw
      bGKcHx87hKKotDidhDMZSorCB9d2YQYsFQWHw4HX69UGn6qqTKdShFJJugKNGlX4bKjtOD8/
      bxCJREgmk6hqtY+x0WgkHA7T09OzgMtUW+sMrEhZZ23/gFgstqzj1eoriZqDWiiKQjyd5mgo
      iE6SGIrN0D8dQVXBb7XxF9fdeNZmg1d2gLcJAYcDi14PEtRb7XT56jDpdDTa7TgkWdPxr7X7
      JUl6q/hkmVRgUfa4VLmn6L6i0+mIx+O0tCykGQvHt1Kp8Oixw3PMqYtBbfHMUl1kFvuMwGLv
      l2UZh8VCXzTM0UiID3f30jBrFsny4p0m53z+PK/hCi4CRp0eVDgQmqTT7eULm7ahryhaI24x
      CS4VRJM5mA1lOhzLUqubTKeYySxs8XQxECWatZLzokNm7ffU7hpLRSv1ej2f3rSNT2/cytFw
      iEg2g1mvZ0tD4zmThFcmwHlCVdXzckwFJpMJYrOJoc31AdqdLoyzTp/H48Fms6243T0folOi
      xWLBZrPR0NBw1gGi0+m4oa2dYDrF80Mnl90Ib7kQMvG1nSAdDodGzJvfiXOpnIgkSdgtFiwm
      E8cjIUw6PX917Q3cvHbdORcUPcBD3/8mm997L4OH+tiyoR2zuxHKGWYmT7FvII7FVKR77Tq6
      1vdoM+a5Jx5EdvewqStANJZGr5ZZ3bmWE30n6VjdQnQmxcnhYW6+diuDYyG8NpmsYsZpkYlE
      43T3dCEBSiHBI796mY1bt+LQldDZ66j3Xr6iuaqq8urIKfZPTfLXDie+ZaygiqIQmXViHUYT
      t7S0gaLArLnidrsvuDzzfLGcFT9XKDAQnqKrPoDXZueGllWsnVcMc7EQPZIXM1FEdZpo4C1U
      Nc51j4rFIsVKhVy5xGQqiWcZ16oHqGvvJTR8BHLT7B+0QbaP1PQUt91xEw6PkUryNPnwICON
      PazxAJQZORNDnj5OOnIap9lIfYOVf3/gKM2NNkYHj5OxtGIsJXju+Re45Y476T+8j33HhvC7
      bTTZjUyt7qLRDKngMP7OraxrdfDYs4ehfIwPfOD953k73z5IksRN7R2s8/mXTbktl8vsC06A
      BA02GzokFFXRFOQupdlzIRgIT/GT40f4JLC5dRV3r79qUZrGxeBsx6pNzIkyzLMlBFVVpVQq
      8fO+o9XMsMVKwzLpI3oAj8eDzyYxKLmQcknMDc34/XU0Nq5COvAa3kATHgcYZydgNjLGjjvv
      JRMcpCJJuEwmvD4jvT1u0vk8q+t9UN/L9MhRPFYjJwZPk06laGxspM5tx2MCw+z1u9p6Kf36
      ZU46OnEY8ug9AQ4fPgzApk2blnURbyeEY1p3HkrPxXK5SvhSqbZTAa1pxeUYgeuqD/DJ2Z/A
      iq788yGk3q0m04KEmohUVSqVJVd/VVWJppK8NDxEXzSCw2jks1uuxrdM6f3zCoNOjg0TjMTw
      +BtZ09a0rM8shfGRQULTSXwNzbS3BM79gd9iHDozyk+OHUEnS2yqD/Du5jZMJtOcLim/r4il
      Unxrzy6ubmzmfT29CyabqqpMT08v6GIpfhdPp/nBoX2EsxluaVvN5sZm6msaAJ4LV/IAbwNy
      hQJP9fexb2qCD3f20Gaz4/V6V1Qy/bcVhWKRXw8O0OmrO68WUaqqMhQO8Yu+o8QKeW5ua+eO
      rvXLDhcLaNNt/2+eJ5ytMDAwwMDAwPldxRWcFRaTiU2BRvwWG7bZqqzLgYBYK+X+TsFkNPK+
      nt7zHvylUok942PEZqXX393Red6DHzQyXBnZ7mXiZD9KZSHn4gouHm0eLx/vWKfx3N9pKIrC
      G6eHQYId7WvOy86/2Cqs+Tjf7x6YCvLMqZPEcjmcRhM3rFqNxXRhIWQZYGqwj1hBJTwdvaCD
      XMG5odPpNEKX0+m8JEKv54NKpcLhcJDDoeBlMSGXC1VVGYiGCaZSlBWFbYGmRdmoy4UeINC5
      kUDnud56BRcDWZZxOp2cSadQ0kb8Doemw5OfDfXZl6gLWGlODryVPRX/Ph+8k5NXkiQcRjNI
      8O5Vq3n3PE3R88U7b4j+nkCSJCSjkUcGT6CXZeosNrY2NnF1S9ucyqn5jrEY/I8eq4aGP9i7
      cUmez9lCioudz9l0Ry9XlMtlTkyHseoNbAw0XXQO5QoV4m2Ex27n/et62BpoqjarUOfShBez
      hcVAV1SVA1NBfn50aWJaIpPhW3t28evBgRWnLVwuSOZyTKXTrHK58a5AueiVHeBthE6n45pV
      q7VVXUiF11ZOLfW5u7p6OJ2Ic3ImynQqhdVkWmAyWU0mrm5snu0W+dsiIHP+0MkSXrNlRRJ0
      VybA24xaSvB81Cop5EslQukU3Q2BWfkTM60OJ0cjIX545AB2o3GBySRCiitNW7icIEsSIFGo
      lFckhHtlArzDqA1Hbmtu5YFD+4nlc5QUhZJS4YOlIqFMhls7OnGZq3yYkqIwk8uRLxUX+AyX
      krbwTiNXKHBqOorDaCSay2o06ouBDNB/ZB9v7NlDPLOwCcXAwADRkaMMTM7tYhIaOsJjL75+
      1oPHJoeZjOXOeRIH9rzGm4eOnc95/05AVVUGwyGeHR6stjEFNgUaaXd78FttfKxnA6FMmv1T
      E+RLJa5rXVWVDywWUVSVdziH9bahXKkwnUxyYirIz/qPcWPLKj69aduKJBOlfD6vnu4/zFgk
      S7PbzJlUDmshTsK+DiJ9jIxPccu2dfQn9VglM3e/9wYAnn36aYrlMu0eGE3oSClGXKQ41jfE
      qu5NxE4forenk7jqRNYbWdfq5dGf/ZxrdmwnJZswKC7ed3s1DPfEE09wzz338MIzvyKTznDd
      XR/Fb728GJKXAoqi8PSJ4+yfmuAL266l3uXWXhcU4GKpRLZQ0JiniUyGsqKgk2U8dvvvrKlT
      i2MT4/zk+GE+2tWLJEt01QewrBB9Rwaw2l0YizOcHJ8GVDBYCI8OklUMtDbWARJr1vWgFMVq
      rpKIRTAW4xwfT7K+pxt/0xp0So6G1tVcvfkqmjt66GjxIyGBLNHfd5KN69eQzpXp6O6mnHtr
      ZzBKFd48WN0BVFVlbOAIw8PDjIVT/C5DlmXetWo1f37N9fidLs12F6WRkiRhMhrxzOYMZFnG
      43Dgd7nwOhy/F4MfIOBwcnWgiVaPl82tq1Zs8MN5kuFyqRh9J4dBb2bbpt6L+uJMIkr/0Ciy
      0cqWDT0XdazfRqiqSj6fvyRd5C8XiEjXxUJwli6Fc3+FDfoOQTS3E72FL0cIAS2r1bose1vk
      J4Qjnk6nKZfLmhyLGGfZbFZryQRopY+C5AZoHSUvNbQJEJ06Qx4rslLAApibmvjdXZveWQjl
      M71ej+MyNGVEkb7oZCO6R4q8xWIDs1gsks1mzysBJ+QPFUXRVvfaz4vvqp0sKw1tWo9PTaOq
      URRFwQN4rkyAS4Za9bfLYfAL80JohdYK6QJa37BaCGkVnU5HLpcjlzt3tG8+aoWuFqNmi8mR
      SqUwGo1ac++V3Bk0OvT4yGlKkpHm3/HqrHcSqqqSTqc1c2Il6Qq1djIszCoLsaza1yuViqbQ
      VtthfjlIp9OanulyP3OhqFQq2gQTytZL9Uw4X/z/K7ro/9wyS28AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
