<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='query (Mag6PlusEarthquakes_1900-2013)' inline='true' name='federated.12x1cap1ixb5ji1368uan1obirdy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Mag6PlusEarthquakes_1900-2013' name='excel-direct.0m5cjii1lt3la6195eyv01apycal'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ravi/Downloads/DVT Presentation/DVT Project Datasets/Project5/Copy of Mag6PlusEarthquakes_1900-2013.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0m5cjii1lt3la6195eyv01apycal' name='query' table='[query$]' type='table'>
          <columns gridOrigin='A1:R8314:no:A1:R8314:0' header='yes' outcome='6'>
            <column datatype='string' name='time' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='datetime' name='Time' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='real' name='latitude' ordinal='4' />
            <column datatype='real' name='longitude' ordinal='5' />
            <column datatype='real' name='depth' ordinal='6' />
            <column datatype='real' name='mag' ordinal='7' />
            <column datatype='string' name='magType' ordinal='8' />
            <column datatype='integer' name='nst' ordinal='9' />
            <column datatype='real' name='gap' ordinal='10' />
            <column datatype='real' name='dmin' ordinal='11' />
            <column datatype='real' name='rms' ordinal='12' />
            <column datatype='string' name='net' ordinal='13' />
            <column datatype='string' name='id' ordinal='14' />
            <column datatype='string' name='updated' ordinal='15' />
            <column datatype='string' name='place' ordinal='16' />
            <column datatype='string' name='type' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0m5cjii1lt3la6195eyv01apycal' name='query' table='[query$]' type='table'>
          <columns gridOrigin='A1:R8314:no:A1:R8314:0' header='yes' outcome='6'>
            <column datatype='string' name='time' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='datetime' name='Time' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='real' name='latitude' ordinal='4' />
            <column datatype='real' name='longitude' ordinal='5' />
            <column datatype='real' name='depth' ordinal='6' />
            <column datatype='real' name='mag' ordinal='7' />
            <column datatype='string' name='magType' ordinal='8' />
            <column datatype='integer' name='nst' ordinal='9' />
            <column datatype='real' name='gap' ordinal='10' />
            <column datatype='real' name='dmin' ordinal='11' />
            <column datatype='real' name='rms' ordinal='12' />
            <column datatype='string' name='net' ordinal='13' />
            <column datatype='string' name='id' ordinal='14' />
            <column datatype='string' name='updated' ordinal='15' />
            <column datatype='string' name='place' ordinal='16' />
            <column datatype='string' name='type' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[query]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R8314:no:A1:R8314:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>depth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[depth]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>depth</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mag</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mag]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>mag</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>magType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[magType]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>magType</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nst</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nst]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>nst</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gap]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>gap</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dmin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dmin]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>dmin</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rms]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>rms</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net</remote-name>
            <remote-type>130</remote-type>
            <local-name>[net]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>net</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>updated</remote-name>
            <remote-type>130</remote-type>
            <local-name>[updated]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>updated</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place</remote-name>
            <remote-type>130</remote-type>
            <local-name>[place]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>place</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[query]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[query_4066F5D2304F49218C7F367240DB7DBD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='African_Continent' datatype='boolean' name='[Calculation_1233423377401257985]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 4]' />
      </column>
      <column caption='Asian_Continent' datatype='boolean' name='[Calculation_1233423377401335810]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 6]' />
      </column>
      <column caption='Antarctic_Continent' datatype='boolean' name='[Calculation_1233423377401409539]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 1]' />
      </column>
      <column caption='Australian_Continent' datatype='boolean' name='[Calculation_1233423377401638916]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 5]' />
      </column>
      <column caption='European_Continent' datatype='boolean' name='[Calculation_1233423377401708549]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 7]' />
      </column>
      <column caption='North_American_Continent' datatype='boolean' name='[Calculation_1233423377401839622]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 2]' />
      </column>
      <column caption='South_American_Continent' datatype='boolean' name='[Calculation_1233423377401884679]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Set 3]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='query' datatype='table' name='[__tableau_internal_object_id__].[query_4066F5D2304F49218C7F367240DB7DBD]' role='measure' type='quantitative' />
      <column caption='Depth' datatype='real' name='[depth]' role='measure' type='quantitative' />
      <column caption='Dmin' datatype='real' name='[dmin]' role='measure' type='quantitative' />
      <column caption='Gap' datatype='real' name='[gap]' role='measure' type='quantitative' />
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Mag Type' datatype='string' name='[magType]' role='dimension' type='nominal' />
      <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
      <column caption='Net' datatype='string' name='[net]' role='dimension' type='nominal' />
      <column caption='Nst' datatype='integer' name='[nst]' role='measure' type='quantitative' />
      <column caption='Place' datatype='string' name='[place]' role='dimension' type='nominal' />
      <column caption='Rms' datatype='real' name='[rms]' role='measure' type='quantitative' />
      <column caption='Time1' datatype='string' name='[time]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Updated' datatype='string' name='[updated]' role='dimension' type='nominal' />
      <column-instance column='[depth]' derivation='Avg' name='[avg:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[depth]' derivation='Median' name='[med:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[depth]' derivation='None' name='[none:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
      <column-instance column='[depth]' derivation='Sum' name='[sum:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mag]' derivation='Sum' name='[sum:mag:qk]' pivot='key' type='quantitative' />
      <group caption='Antarctica' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Mid-Atlantic Ridge&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;Balleny Islands region&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='North America' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Alaska Peninsula&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Baja California, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gulf of California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Haida Gwaii Region, Canada&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kodiak Island region, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Michoacan, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Jalisco, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Central California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Jalisco, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Puebla, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southeastern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Idaho&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Veracruz, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Baffin Bay&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Baja California, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;British Columbia, Canada&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Central Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Revilla Gigedo Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sonora-Sinaloa border region, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sonora, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southeastern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern California&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Alaska Peninsula&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Baja California Sur, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Baja California, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Central Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gulf of Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kodiak Island region, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Michoacan, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Puebla, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Revilla Gigedo Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Veracruz, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Alaska Peninsula&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Central California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jalisco, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kodiak Island region, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Northern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern California&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Yellowstone National Park, Wyoming&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.4000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Atlantic Ocean&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guerrero, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hawaii region, Hawaii&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Colima, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southeastern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southern Alaska&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Michoacan, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Southeastern Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Michoacan, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vancouver Island, Canada region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kodiak Island region, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Northern California&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Central Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gulf of Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Haida Gwaii, Canada&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southeastern Alaska&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.9000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Colima, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gulf of Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jalisco, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Colima, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Haida Gwaii, Canada&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Michoacan, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.3000000000000007' />
            <groupfilter function='member' level='[place]' member='&quot;Alaska Peninsula&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.5999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;south of Alaska&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='9.1999999999999993' />
            <groupfilter function='member' level='[place]' member='&quot;Southern Alaska&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='South America' name='[Set 3]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Acre, Brazil&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Amazonas, Brazil&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bio-Bio, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Chuquisaca, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the South Sandwich Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Falkland Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Haiti region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Isla Chiloe, Los Lagos, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jamaica region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jujuy, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Libertador General Bernardo O&apos;Higgins, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mona Passage, Dominican Republic&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern East Pacific Rise&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Mid-Atlantic Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Ecuador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Tarapaca, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore El Salvador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guatemala&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Brazil border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Ecuador border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Potosi, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Puerto Rico region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Region Metropolitana, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Salta, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santiago Del Estero, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Scotia Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Panama&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Sandwich Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Shetland Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern East Pacific Rise&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sucre, Venezuela&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tierra del Fuego, Argentina region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Valparaiso, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Veracruz, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;46km SSE of Acari, Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Acre, Brazil&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Aisen, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Araucania, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bio-Bio, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Mid-Atlantic Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Chiapas, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Coquimbo, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dominican Republic region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jujuy, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Maule, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Tarapaca, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of El Salvador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Los Lagos, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Tarapaca, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Valparaiso, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Araucania, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Chiapas, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Honduras&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Ecuador border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Potosi, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Region Metropolitana, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Revilla Gigedo Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Saint Lucia region, Windward Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;San Juan, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santiago Del Estero, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Sandwich Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Shetland Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tarapaca, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Aisen, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Araucania, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Chiapas, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Colombia-Ecuador border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Cuba region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of Dominica, Leeward Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the South Sandwich Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jujuy, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Los Lagos, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Martinique region, Windward Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mendoza, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Ecuador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Nicaragua&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the west coast of Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Los Lagos, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Chiapas, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oruro, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panama-Colombia border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panama-Costa Rica border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Brazil border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santiago Del Estero, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Scotia Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Panama&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Sandwich Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tarapaca, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;218km SSE of Bristol Island, South Sandwich Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Los Lagos, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mona Passage, Puerto Rico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of El Salvador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Chiapas, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore El Salvador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Honduras&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Los Lagos, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oruro, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Brazil border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Ecuador border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santiago Del Estero, Argentina&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.4000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Amazonas, Brazil&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the South Sandwich Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guadeloupe region, Leeward Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Martinique region, Windward Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Bio-Bio, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guatemala&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Valparaiso, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Potosi, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santiago Del Estero, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Valparaiso, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Araucania, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bio-Bio, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dominican Republic region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the South Sandwich Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guatemala&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Maule, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Brazil border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Peru-Ecuador border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;San Juan, Argentina&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Sandwich Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tarapaca, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Michoacan, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panama-Costa Rica border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Puerto Rico region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Scotia Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Sandwich Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tarapaca, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Acre, Brazil&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Araucania, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Atacama, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Maule, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Nicaragua&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore El Salvador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Guatemala&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Miranda, Venezuela&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Scotia Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Peru&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Chiapas, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Ecuador&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of northern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Oaxaca, Mexico&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of southern Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Chile-Argentina border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tarapaca, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tierra del Fuego, Magallanes, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Valparaiso, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.9000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Araucania, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guerrero, Mexico&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Antofagasta, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;offshore Valparaiso, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Sandwich Islands region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;near the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Ecuador&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.1999999999999993' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Bio-Bio, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Coquimbo, Chile&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;La Paz, Bolivia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of central Peru&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Valparaiso, Chile&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.4000000000000004' />
            <groupfilter function='member' level='[place]' member='&quot;near the coast of southern Peru&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.5999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;near the coast of Ecuador&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.6999999999999993' />
            <groupfilter function='member' level='[place]' member='&quot;Atacama, Chile&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.8000000000000007' />
            <groupfilter function='member' level='[place]' member='&quot;offshore Bio-Bio, Chile&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='9.5999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;Araucania, Chile&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Africa' name='[Set 4]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;central Mid-Atlantic Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Lake Edward region, Congo-Uganda&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southwest Indian Ridge&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Azores-Cape St. Vincent Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Libya&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Algeria&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Mid-Atlantic Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Southwest Indian Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sudan&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;north of Ascension Island&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Indian Ocean&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5' />
            <groupfilter function='member' level='[place]' member='&quot;South Indian Ocean&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Lake Rukwa region, Tanzania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='union'>
              <groupfilter function='member' level='[mag]' member='7.7999999999999998' />
              <groupfilter function='member' level='[mag]' member='7.9000000000000004' />
              <groupfilter function='member' level='[mag]' member='8.0999999999999996' />
            </groupfilter>
            <groupfilter function='member' level='[place]' member='&quot;Azores-Cape St. Vincent Ridge&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0' />
            <groupfilter function='member' level='[place]' member='&quot;south of Africa&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Australia' name='[Set 5]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;240km E of Enarotali, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;27km NNW of Lata, Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Balleny Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bismarck Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bougainville region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Buru, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ceram Sea, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern New Guinea region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Flores Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands, New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Loyalty Islands, New Caledonia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;north of Macquarie Island&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;north of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Australia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Kermadec Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='%null%' />
              <groupfilter function='member' level='[place]' member='&quot;114km WSW of Lata, Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;31km SE of Lata, Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Admiralty Islands region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Auckland Islands, New Zealand region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bismarck Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bougainville region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;D&apos;Entrecasteaux Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the North Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;East Timor region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern New Guinea region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Flores Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Kai, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Tanimbar, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands, New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ninigo Islands region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the North Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of the South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Seram, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Kermadec Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Biak region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bismarck Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bougainville region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern New Guinea region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Flores region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Babar, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Barat Daya, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Obi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Tanimbar, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands, New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;north of Macquarie Island&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northwest of Australia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sumbawa region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;115km ENE of Taron, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern New Guinea region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Barat Daya, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Loyalty Islands, New Caledonia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;north of Macquarie Island&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of the South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samoa Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Timor region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.4000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;282km SW of Vaini, Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Auckland Islands, New Zealand region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Barat Daya, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands, New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Biak region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bougainville region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Alor, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Babar, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Barat Daya, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Aru region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of the South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Bougainville region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fiji region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Sula, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samoa Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Flores region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands, New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of the South Island of New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Santa Cruz Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Fiji Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.9000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Flores Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands, New Zealand&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Loyalty Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Vanuatu&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;76km W of Lata, Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Britain region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samoa Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Balleny Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kermadec Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Macquarie Island region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Guinea, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;New Ireland region, Papua New Guinea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;north of Macquarie Island&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samoa Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.1999999999999993' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Biak region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Sula, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tonga&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.3000000000000007' />
            <groupfilter function='member' level='[place]' member='&quot;south of Sumbawa, Indonesia&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.5999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Asia' name='[Set 6]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='%null%' />
              <groupfilter function='member' level='[place]' member='&quot;101km SW of Atka, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Babuyan Islands region, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bali Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Batan Islands region, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Buru, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Celebes Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Mongolia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ceram Sea, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Chagos Archipelago region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Sea of Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Xizang&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Georgia (Sak&apos;art&apos;velo)&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guam region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Halmahera, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hebei, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Iran-Pakistan border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Izu Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jilin-Heilongjiang border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Batu, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Mentawai region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Talaud, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Komandorskiye Ostrova, Russia region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyushu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Leyte, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Liaoning, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Luzon, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mariana Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindoro, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Molucca Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar-China border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the west coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Negros - Cebu region, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Pacific Ocean&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Owen Fracture Zone region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pagan region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Palau region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Philippine Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rota region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Russia-Mongolia border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sakhalin, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Okhotsk&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South China Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Indian Ocean&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Aleutian Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Xinjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;State of Yap, Federated States of Micronesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkey-Iran border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Uzbekistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Yunnan, China&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;4km SE of Sagbayan, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Alamagan region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Assam, India&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bay of Bengal&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bonin Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Catanduanes, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Celebes Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Sea of Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gansu, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guam region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Izu Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Java Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jilin-Heilongjiang border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Talaud, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Komandorskiye Ostrova, Russia region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyrgyzstan-Tajikistan-Xinjiang border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyushu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Luzon, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Maldive Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Maug Islands region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Meghalaya, India region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindoro, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Molucca Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar-India border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Near Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nias region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northeast of Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northeastern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Xinjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northwest of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Owen Fracture Zone region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pagan region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panay, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Philippine Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sakhalin, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samar, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Okhotsk&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Seram, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Xinjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;State of Yap, Federated States of Micronesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sulu Archipelago, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sunda Strait, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkey-Iran border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Volcano Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Mongolia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Xizang&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Yunnan, China&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;251km ENE of Kuril&apos;sk, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Andaman Islands, India region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Biak region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bo Hai, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Celebes Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Philippine Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Halmahera, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Java Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Mentawai region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Obi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Talaud, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Luzon, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindoro, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Molucca Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mongolia-China border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Near Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of Fujian, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of western Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nicobar Islands, India region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northeastern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Xinjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northwest of Australia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of northern Sumatra&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pagan region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samar, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Simeulue, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southwestern Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southwestern Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southwestern Siberia, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tatar Strait, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Volcano Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Sichuan, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Xizang&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Xinjiang-Xizang border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Yunnan, China&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bonin Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Catanduanes, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Sichuan, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Xizang-India border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Georgia (Sak&apos;art&apos;velo)&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Heilongjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Izu Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Jilin-Heilongjiang border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Komandorskiye Ostrova, Russia region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Luzon, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mariana Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindoro, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Moro Gulf, Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Near Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northeast of Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northwest of Australia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northwest of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Philippine Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Primor&apos;ye, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sakhalin, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Okhotsk&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Xinjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sunda Strait, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Mongolia&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.4000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Bonin Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Chitinskaya Oblast&apos;, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Fox Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Izu Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mariana Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the coast of northern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Primor&apos;ye, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Okhotsk&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Simeulue, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of the Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southwestern Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Sichuan, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Turkey&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Alamagan region, Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Andaman Islands, India region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Biak region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Carlsberg Ridge&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Sea of Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Izu Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyushu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mariana Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Molucca Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Moro Gulf, Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nicobar Islands, India region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northwest of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of northern Sumatra&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Philippine Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Qinghai-Sichuan border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Samar, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Shikoku, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Aleutian Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southeast of Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southwestern Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;State of Yap, Federated States of Micronesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Sichuan, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Xizang&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Banda Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gansu, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gujarat, India&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hindu Kush region, Afghanistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Talaud, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Molucca Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Moro Gulf, Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Koryakskiy Avtonomnyy Okrug, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the west coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of northern Sumatra&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Palau region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Philippine Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Qinghai, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southwestern Ryukyu Islands, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Tianjin-Hebei border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Volcano Islands, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Turkey&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;61km NNE of Awaran, Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;83km E of Khash, Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Andaman Islands, India region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Chagos Archipelago region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Xizang&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gansu-Qinghai border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Sula, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Talaud, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyrgyzstan-Xinjiang border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kyushu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Luzon, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Near Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the west coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Philippine Islands region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Okhotsk&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Indian Ocean&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;State of Yap, Federated States of Micronesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Celebes Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Kazakhstan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Guam region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kashmir-India border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Batu, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Mentawai region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;North Korea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of Java, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;south of the Aleutian Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Qinghai, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sulawesi, Indonesia&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.9000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Sichuan, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Mentawai region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Talaud, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Minahasa, Sulawesi, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the north coast of Papua, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Xinjiang, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;South Indian Ocean&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Taiwan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Volcano Islands, Japan region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Gansu-Ningxia border region, China&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Nepal-India border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the coast of Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Russia-Mongolia border region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;central Mongolia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;east of the Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Molucca Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;near the south coast of western Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Panay, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Ryukyu Islands, Japan&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.1999999999999993' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Biak region, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Celebes Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kepulauan Sula, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Mindanao, Philippines&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of northern Sumatra&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.3000000000000007' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Hokkaido, Japan region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Sea of Okhotsk&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.4000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.5' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of the Kamchatka Peninsula, Russia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Mongolia&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.5999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Andreanof Islands, Aleutian Islands, Alaska&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Xizang-India border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Kuril Islands&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;northern Sumatra, Indonesia&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the west coast of northern Sumatra&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.6999999999999993' />
            <groupfilter function='member' level='[place]' member='&quot;Rat Islands, Aleutian Islands, Alaska&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='9.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;near the east coast of Honshu, Japan&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;off the east coast of the Kamchatka Peninsula, Russia&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='9.0999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;off the west coast of northern Sumatra&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Europe' name='[Set 7]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Georgia (Sak&apos;art&apos;velo)&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Montenegro-Albania border region&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkey-Iran border region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.0999999999999996' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;southern Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Turkey-Iran border region&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Aegean Sea&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;central Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Turkey&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.2999999999999998' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Georgia (Sak&apos;art&apos;velo)&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.4000000000000004' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;near the coast of northern Iran&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;western Turkey&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;central Turkey&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;Romania&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.5999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;western Turkey&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7000000000000002' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
              <groupfilter function='member' level='[place]' member='&quot;eastern Turkey&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='7.7999999999999998' />
            <groupfilter function='member' level='[place]' member='&quot;Dodecanese Islands, Greece&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[mag]' member='8.0999999999999996' />
            <groupfilter function='member' level='[place]' member='&quot;southern Greece&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Continental_Data'>
          <field>[Calculation_1233423377401257985]</field>
          <field>[Calculation_1233423377401409539]</field>
          <field>[Calculation_1233423377401335810]</field>
          <field>[Calculation_1233423377401638916]</field>
          <field>[Calculation_1233423377401708549]</field>
          <field>[Calculation_1233423377401839622]</field>
          <field>[Calculation_1233423377401884679]</field>
        </drill-path>
        <drill-path name='Continents'>
          <field>[Set 4]</field>
          <field>[Set 6]</field>
          <field>[Set 1]</field>
          <field>[Set 5]</field>
          <field>[Set 7]</field>
          <field>[Set 2]</field>
          <field>[Set 3]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Set 1:nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:mag:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:depth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy].[med:depth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy].[none:depth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:depth:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='time' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Time' />
        <field-sort-custom-order field='F4' />
        <field-sort-custom-order field='latitude' />
        <field-sort-custom-order field='longitude' />
        <field-sort-custom-order field='depth' />
        <field-sort-custom-order field='mag' />
        <field-sort-custom-order field='magType' />
        <field-sort-custom-order field='nst' />
        <field-sort-custom-order field='gap' />
        <field-sort-custom-order field='dmin' />
        <field-sort-custom-order field='rms' />
        <field-sort-custom-order field='net' />
        <field-sort-custom-order field='id' />
        <field-sort-custom-order field='updated' />
        <field-sort-custom-order field='place' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='query' id='query_4066F5D2304F49218C7F367240DB7DBD'>
            <properties context=''>
              <relation connection='excel-direct.0m5cjii1lt3la6195eyv01apycal' name='query' table='[query$]' type='table'>
                <columns gridOrigin='A1:R8314:no:A1:R8314:0' header='yes' outcome='6'>
                  <column datatype='string' name='time' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='datetime' name='Time' ordinal='2' />
                  <column datatype='real' name='F4' ordinal='3' />
                  <column datatype='real' name='latitude' ordinal='4' />
                  <column datatype='real' name='longitude' ordinal='5' />
                  <column datatype='real' name='depth' ordinal='6' />
                  <column datatype='real' name='mag' ordinal='7' />
                  <column datatype='string' name='magType' ordinal='8' />
                  <column datatype='integer' name='nst' ordinal='9' />
                  <column datatype='real' name='gap' ordinal='10' />
                  <column datatype='real' name='dmin' ordinal='11' />
                  <column datatype='real' name='rms' ordinal='12' />
                  <column datatype='string' name='net' ordinal='13' />
                  <column datatype='string' name='id' ordinal='14' />
                  <column datatype='string' name='updated' ordinal='15' />
                  <column datatype='string' name='place' ordinal='16' />
                  <column datatype='string' name='type' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1. Geographical Representation of Earthquakes from 1900 - 2013'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='query (Mag6PlusEarthquakes_1900-2013)' name='federated.12x1cap1ixb5ji1368uan1obirdy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12x1cap1ixb5ji1368uan1obirdy'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Depth' datatype='real' name='[depth]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[place]' derivation='None' name='[none:place:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' type='nominal' />
            <column-instance column='[depth]' derivation='Sum' name='[sum:depth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mag]' derivation='Sum' name='[sum:mag:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[yr:Date:ok]'>
            <groupfilter from='1900' function='range' level='[yr:Date:ok]' to='2012' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:depth:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:depth:qk]' />
              <size column='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:mag:qk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:place:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.263370156288147' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:latitude:qk]</rows>
        <cols>[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{909B81A8-42E3-4D73-BE8E-BA2AEC801316}' />
    </worksheet>
    <worksheet name='2. Scatter Plot to show relation between Depth and Magnitude'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='query (Mag6PlusEarthquakes_1900-2013)' name='federated.12x1cap1ixb5ji1368uan1obirdy' />
          </datasources>
          <datasource-dependencies datasource='federated.12x1cap1ixb5ji1368uan1obirdy'>
            <column-instance column='[depth]' derivation='Avg' name='[avg:depth:qk]' pivot='key' type='quantitative' />
            <column caption='Depth' datatype='real' name='[depth]' role='measure' type='quantitative' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[depth]' derivation='None' name='[none:depth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]' included-values='in-range'>
            <min>7.0</min>
            <max>9.5999999999999996</max>
          </filter>
          <slices>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:depth:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:depth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:depth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12x1cap1ixb5ji1368uan1obirdy].[none:depth:qk] + [federated.12x1cap1ixb5ji1368uan1obirdy].[avg:depth:qk])</rows>
        <cols>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]</cols>
      </table>
      <simple-id uuid='{AFF23D86-0CE8-49F7-BD20-B684EDC8D574}' />
    </worksheet>
    <worksheet name='3. Major Earthquakes by Continents (Magnitude &gt; 7)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='query (Mag6PlusEarthquakes_1900-2013)' name='federated.12x1cap1ixb5ji1368uan1obirdy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12x1cap1ixb5ji1368uan1obirdy'>
            <column caption='African_Continent' datatype='boolean' name='[Calculation_1233423377401257985]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 4]' />
            </column>
            <column caption='Asian_Continent' datatype='boolean' name='[Calculation_1233423377401335810]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 6]' />
            </column>
            <column caption='Antarctic_Continent' datatype='boolean' name='[Calculation_1233423377401409539]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 1]' />
            </column>
            <column caption='Australian_Continent' datatype='boolean' name='[Calculation_1233423377401638916]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 5]' />
            </column>
            <column caption='European_Continent' datatype='boolean' name='[Calculation_1233423377401708549]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 7]' />
            </column>
            <column caption='North_American_Continent' datatype='boolean' name='[Calculation_1233423377401839622]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 2]' />
            </column>
            <column caption='South_American_Continent' datatype='boolean' name='[Calculation_1233423377401884679]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Set 3]' />
            </column>
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 3]' derivation='InOut' name='[io:Set 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 4]' derivation='InOut' name='[io:Set 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 5]' derivation='InOut' name='[io:Set 5:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 6]' derivation='InOut' name='[io:Set 6:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 7]' derivation='InOut' name='[io:Set 7:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1233423377401257985]' derivation='None' name='[none:Calculation_1233423377401257985:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1233423377401335810]' derivation='None' name='[none:Calculation_1233423377401335810:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1233423377401409539]' derivation='None' name='[none:Calculation_1233423377401409539:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1233423377401638916]' derivation='None' name='[none:Calculation_1233423377401638916:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1233423377401708549]' derivation='None' name='[none:Calculation_1233423377401708549:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1233423377401839622]' derivation='None' name='[none:Calculation_1233423377401839622:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1233423377401884679]' derivation='None' name='[none:Calculation_1233423377401884679:nk]' pivot='key' type='nominal' />
            <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
            <column-instance column='[place]' derivation='None' name='[none:place:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1233423377401257985:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1233423377401335810:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1233423377401409539:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1233423377401638916:nk]' member='false' />
              <groupfilter function='member' level='[none:Calculation_1233423377401638916:nk]' member='true' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1233423377401708549:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1233423377401839622:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1233423377401884679:nk]' member='false' />
              <groupfilter function='member' level='[none:Calculation_1233423377401884679:nk]' member='true' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]' included-values='in-range'>
            <min>7.0</min>
            <max>9.5999999999999996</max>
          </filter>
          <slices>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]</column>
            <column>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:longitude:qk]' field-type='quantitative' max='40906835.33408948' min='-36660234.148183852' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:latitude:qk]' field-type='quantitative' max='14331371.182624836' min='-12672301.424769064' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 5:nk]' value='Australia'>
              <formatted-text>
                <run>Australia</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 3:nk]' value='South America'>
              <formatted-text>
                <run>South America</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 7:nk]' value='Europe'>
              <formatted-text>
                <run>Europe</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 2:nk]' value='North America'>
              <formatted-text>
                <run>North America</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 6:nk]' value='Asia'>
              <formatted-text>
                <run>Asia</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 1:nk]' value='Antarctica'>
              <formatted-text>
                <run>Antarctica</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 4:nk]' value='Africa'>
              <formatted-text>
                <run>Africa</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 1]' value='Antarctica'>
              <formatted-text>
                <run>Antarctica</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 6]' value='Asia'>
              <formatted-text>
                <run>Asia</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 5]' value='Australia'>
              <formatted-text>
                <run>Australia</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 7]' value='Europe'>
              <formatted-text>
                <run>Europe</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 2]' value='North America'>
              <formatted-text>
                <run>North America</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 3]' value='South America'>
              <formatted-text>
                <run>South America</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12x1cap1ixb5ji1368uan1obirdy].[Set 4]' value='Africa'>
              <formatted-text>
                <run>Africa</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:place:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]' />
              <lod column='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:latitude:qk]</rows>
        <cols>[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{A83EB7DD-5703-4900-AC39-410CC9C68E54}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Earthquake Summary'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='query (Mag6PlusEarthquakes_1900-2013)' name='federated.12x1cap1ixb5ji1368uan1obirdy' />
      </datasources>
      <datasource-dependencies datasource='federated.12x1cap1ixb5ji1368uan1obirdy'>
        <column caption='African_Continent' datatype='boolean' name='[Calculation_1233423377401257985]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 4]' />
        </column>
        <column caption='Asian_Continent' datatype='boolean' name='[Calculation_1233423377401335810]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 6]' />
        </column>
        <column caption='Antarctic_Continent' datatype='boolean' name='[Calculation_1233423377401409539]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 1]' />
        </column>
        <column caption='Australian_Continent' datatype='boolean' name='[Calculation_1233423377401638916]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 5]' />
        </column>
        <column caption='European_Continent' datatype='boolean' name='[Calculation_1233423377401708549]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 7]' />
        </column>
        <column caption='North_American_Continent' datatype='boolean' name='[Calculation_1233423377401839622]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 2]' />
        </column>
        <column caption='South_American_Continent' datatype='boolean' name='[Calculation_1233423377401884679]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[Set 3]' />
        </column>
        <column-instance column='[Calculation_1233423377401257985]' derivation='None' name='[none:Calculation_1233423377401257985:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1233423377401335810]' derivation='None' name='[none:Calculation_1233423377401335810:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1233423377401409539]' derivation='None' name='[none:Calculation_1233423377401409539:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1233423377401638916]' derivation='None' name='[none:Calculation_1233423377401638916:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1233423377401708549]' derivation='None' name='[none:Calculation_1233423377401708549:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1233423377401839622]' derivation='None' name='[none:Calculation_1233423377401839622:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1233423377401884679]' derivation='None' name='[none:Calculation_1233423377401884679:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='12' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='89' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='17' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='4' type-v2='layout-basic' w='98400' x='800' y='1000'>
                <zone h='96000' id='7' param='horz' type-v2='layout-flow' w='96800' x='1600' y='2000'>
                  <zone fixed-size='160' h='96000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='96800' x='1600' y='2000' />
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='8' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='55500' id='3' name='1. Geographical Representation of Earthquakes from 1900 - 2013' show-title='false' w='47800' x='52200' y='125' />
        <zone h='55500' id='10' name='2. Scatter Plot to show relation between Depth and Magnitude' show-title='false' w='51800' x='200' y='0' />
        <zone h='11000' id='9' name='1. Geographical Representation of Earthquakes from 1900 - 2013' pane-specification-id='0' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:depth:qk]' type-v2='color' w='14000' x='76900' y='1750' />
        <zone h='9250' id='11' name='2. Scatter Plot to show relation between Depth and Magnitude' pane-specification-id='1' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]' type-v2='color' w='15500' x='29100' y='1625' />
        <zone h='43250' id='15' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' show-title='false' w='99200' x='200' y='55625'>
          <layout-cache minheight='251' type-h='scalable' type-w='fixed' />
        </zone>
        <zone h='6125' id='45' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]' type-v2='filter' values='cascading' w='16000' x='83500' y='59500' />
        <zone h='8000' id='46' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]' type-v2='filter' values='cascading' w='16000' x='83600' y='66375' />
        <zone h='7125' id='47' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]' type-v2='filter' values='cascading' w='16000' x='83600' y='75625' />
        <zone h='7250' id='48' mode='checkdropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]' type-v2='filter' values='cascading' w='16000' x='83500' y='84375' />
        <zone h='6875' id='49' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]' type-v2='filter' values='cascading' w='16000' x='83700' y='92500' />
        <zone h='7375' id='50' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]' type-v2='filter' values='cascading' w='16000' x='400' y='84250' />
        <zone h='7125' id='51' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]' type-v2='filter' values='cascading' w='16000' x='500' y='91375' />
        <zone forceUpdate='true' h='37625' id='20' type-v2='text' w='19900' x='0' y='49625'>
          <formatted-text>
            <run bold='true' fontcolor='#005500' fontsize='11' underline='true'>Earthquake Count</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>Africa - 22</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>Antarctica - 3</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>Asia - 480</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>Australia - 237</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>Europe - 30</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>North America - 101</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#005500' fontsize='11'>South America - 249</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='99' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='98' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='55500' id='10' is-fixed='true' name='2. Scatter Plot to show relation between Depth and Magnitude' show-title='false' w='51800' x='200' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9250' id='11' name='2. Scatter Plot to show relation between Depth and Magnitude' pane-specification-id='1' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]' type-v2='color' w='15500' x='29100' y='1625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55500' id='3' is-fixed='true' name='1. Geographical Representation of Earthquakes from 1900 - 2013' show-title='false' w='47800' x='52200' y='125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11000' id='9' name='1. Geographical Representation of Earthquakes from 1900 - 2013' pane-specification-id='0' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:depth:qk]' type-v2='color' w='14000' x='76900' y='1750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='37625' id='20' type-v2='text' w='19900' x='0' y='49625'>
                  <formatted-text>
                    <run bold='true' fontcolor='#005500' fontsize='11' underline='true'>Earthquake Count</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>Africa - 22</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>Antarctica - 3</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>Asia - 480</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>Australia - 237</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>Europe - 30</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>North America - 101</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#005500' fontsize='11'>South America - 249</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6125' id='45' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]' type-v2='filter' values='cascading' w='16000' x='83500' y='59500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='46' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]' type-v2='filter' values='cascading' w='16000' x='83600' y='66375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7125' id='47' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]' type-v2='filter' values='cascading' w='16000' x='83600' y='75625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='48' mode='checkdropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]' type-v2='filter' values='cascading' w='16000' x='83500' y='84375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6875' id='49' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]' type-v2='filter' values='cascading' w='16000' x='83700' y='92500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7375' id='50' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]' type-v2='filter' values='cascading' w='16000' x='400' y='84250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7125' id='51' mode='dropdown' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]' type-v2='filter' values='cascading' w='16000' x='500' y='91375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43250' id='15' is-fixed='true' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' show-title='false' w='99200' x='200' y='55625'>
                  <layout-cache minheight='251' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ED9A7BCB-EC62-493B-8230-2EED333AB0BE}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='1. Geographical Representation of Earthquakes from 1900 - 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:mag:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[sum:depth:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:magType:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:place:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:time:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[qr:Time:ok]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{5B625E6C-74C6-4ECD-B338-D74EF2DD98D1}' />
    </window>
    <window class='worksheet' name='2. Scatter Plot to show relation between Depth and Magnitude'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.12x1cap1ixb5ji1368uan1obirdy].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.12x1cap1ixb5ji1368uan1obirdy].[avg:depth:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:id:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B4949248-1423-4D2D-991A-A025C2E4DD3F}' />
    </window>
    <window class='worksheet' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)'>
      <cards>
        <edge name='left'>
          <strip size='208'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]' type='filter' values='cascading' />
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]' type='filter' values='cascading' />
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]' type='filter' values='cascading' />
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]' type='filter' values='cascading' />
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]' type='filter' values='cascading' />
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]' type='filter' values='cascading' />
            <card param='[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 1:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 2:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 3:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 4:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 5:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 6:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[io:Set 7:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401257985:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401335810:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401409539:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401638916:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401708549:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401839622:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:Calculation_1233423377401884679:nk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:mag:qk]</field>
            <field>[federated.12x1cap1ixb5ji1368uan1obirdy].[none:place:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{603789F2-55CC-4547-A12D-8F5279FFD428}' />
    </window>
    <window class='dashboard' maximized='true' name='Earthquake Summary'>
      <viewpoints>
        <viewpoint name='1. Geographical Representation of Earthquakes from 1900 - 2013'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2. Scatter Plot to show relation between Depth and Magnitude' />
        <viewpoint name='3. Major Earthquakes by Continents (Magnitude &gt; 7)'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{4F0428A0-7FB6-470C-A0A9-085FED1F4554}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1. Geographical Representation of Earthquakes from 1900 - 2013' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2. Scatter Plot to show relation between Depth and Magnitude' width='192'>
      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
      B385Jy1Lcrz3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='3. Major Earthquakes by Continents (Magnitude &gt; 7)' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Earthquake Summary' width='192'>
      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
      /W/BX4tpf+7Z/QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
